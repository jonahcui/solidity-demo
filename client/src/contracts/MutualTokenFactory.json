{
  "contractName": "MutualTokenFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ProposalDone",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ProposalReCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ProposalReject",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userJoinedProposal",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract UserActivityProposal",
          "name": "proposal",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStates",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "info",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "joined",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "join",
      "outputs": [
        {
          "internalType": "address",
          "name": "_proposalAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "accept",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "reject",
      "outputs": [
        {
          "internalType": "enum UserActivityProposal.Stage",
          "name": "stage",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getEscrowTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ProposalDone\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ProposalReCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ProposalReject\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"accept\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEscrowTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"join\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_proposalAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"reject\",\"outputs\":[{\"internalType\":\"enum UserActivityProposal.Stage\",\"name\":\"stage\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userJoinedProposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract UserActivityProposal\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"joined\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MutualTokenFactory.sol\":\"MutualTokenFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/MutualEscrowToken.sol\":{\"keccak256\":\"0xac3de163f23a004ff10594eee69b49e55cc249a1847f053bd5ea9183772eebe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f6108082392d681f48006cb96f59237a2b422972bedfa29f22046701a7972be\",\"dweb:/ipfs/QmbQ5mVo54tMfMXxveZ67RZ6dH4TTDmUiTTGZZeeFZ2adw\"]},\"project:/contracts/MutualToken.sol\":{\"keccak256\":\"0x91432fe00f102a9b2a3f207051e2f16ebcf51be0a2f57f695aa823bab5eec3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e25589065122e78c018460372fea5fccc89391cc63c545cf0d764989ae42ee7\",\"dweb:/ipfs/QmbSTYDy6XpqNnueBgVaZr8WFozNySMERptqjs1KmKZPQE\"]},\"project:/contracts/MutualTokenFactory.sol\":{\"keccak256\":\"0x2a4c174903756c513932b50c85721b22d2bdb12a2ca5bb8f251d7a67c3e8546f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30e76472f729e77baa499741875d6ded3bc3b10b0f86506cea899d95719660e2\",\"dweb:/ipfs/QmXM7sXjPxaN78KTa2dbQmn5RTyYLhYxPyTgVV5iKByVee\"]},\"project:/contracts/UserActivityProposal.sol\":{\"keccak256\":\"0xe493799cab07cd67dd551da8be5f4820d223bb03e4e18b28e344a966c90fea62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://961e227f6a1d2565d55d9fa06e8977b0fbfd2daa1a7bb03f6ed569806a995145\",\"dweb:/ipfs/Qmcvu4gKTRPLoSJcDuAypza9mPiEzVJwuonHYDr5bjyMgC\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c80638bea736e116200006f5780638bea736e14620001855780638da5cb5b14620001a75780639f00592014620001c9578063ab0da5a914620001e9578063f2fde38b146200021f57620000ac565b80630734a58b14620000b15780630ecc535f14620000e957806310fe9ae814620001215780633cfb3d8a1462000143578063715018a61462000179575b600080fd5b620000cf6004803603810190620000c9919062001727565b6200023f565b604051620000e093929190620017f2565b60405180910390f35b62000107600480360381019062000101919062001727565b620002b6565b6040516200011893929190620018d3565b60405180910390f35b6200012b6200039d565b6040516200013a919062001917565b60405180910390f35b6200016160048036038101906200015b9190620019dd565b620003c7565b60405162000170919062001917565b60405180910390f35b620001836200082b565b005b6200018f620008bc565b6040516200019e919062001917565b60405180910390f35b620001b1620008e6565b604051620001c0919062001917565b60405180910390f35b620001e76004803603810190620001e1919062001727565b6200090f565b005b62000207600480360381019062000201919062001727565b62001090565b60405162000216919062001ac7565b60405180910390f35b6200023d600480360381019062000237919062001727565b62001421565b005b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054620003019062001b13565b80601f01602080910402602001604051908101604052809291908181526020018280546200032f9062001b13565b8015620003805780601f10620003545761010080835404028352916020019162000380565b820191906000526020600020905b8154815290600101906020018083116200036257829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003373ffffffffffffffffffffffffffffffffffffffff16620003ea620008e6565b73ffffffffffffffffffffffffffffffffffffffff160362000443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200043a9062001b98565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615620004d6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004cd9062001c0a565b60405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160149054906101000a900460ff161562000632577f299f6b431d20505d54957d6f502e50c91eee5148992dd9510f4bd75e8dd384f8600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620005bf919062001917565b60405180910390a1600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905062000824565b60003384848762000642620008e6565b600560000160009054906101000a900460ff16600560000160019054906101000a900460ff166040516200067690620015f0565b62000688979695949392919062001c9d565b604051809103906000f080158015620006a5573d6000803e3d6000fd5b50905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160146101000a81548160ff0219169083151502179055507f488fccde177d9377f35d8d9a4f0b3462fcc7cdb926a00d3d99630ef1d672a2cd81604051620007b5919062001917565b60405180910390a1600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150505b9392505050565b6200083562001524565b73ffffffffffffffffffffffffffffffffffffffff1662000855620008e6565b73ffffffffffffffffffffffffffffffffffffffff1614620008ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008a59062001d63565b60405180910390fd5b620008ba60006200152c565b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b62000919620008e6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806200099f5750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff165b620009e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009d89062001dfb565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160362000a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a499062001e93565b60405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160149054906101000a900460ff1662000ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000adb9062001f05565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663bd041c4d3360016040518363ffffffff1660e01b815260040162000b8b92919062001f27565b6020604051808303816000875af115801562000bab573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd1919062001f7c565b90506001600281111562000bea5762000be962001a47565b5b81600281111562000c005762000bff62001a47565b5b036200108b57600060028373ffffffffffffffffffffffffffffffffffffffff1663d321fe296040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000c56573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c7c919062001fc5565b62000c88919062002055565b90506000818473ffffffffffffffffffffffffffffffffffffffff1663d321fe296040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000cd9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cff919062001fc5565b62000d0b91906200208d565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1986846040518363ffffffff1660e01b815260040162000d6c929190620020c8565b600060405180830381600087803b15801562000d8757600080fd5b505af115801562000d9c573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1986836040518363ffffffff1660e01b815260040162000dff929190620020c8565b600060405180830381600087803b15801562000e1a57600080fd5b505af115801562000e2f573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663832880e76040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000e7f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ea591906200210c565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff16635a9b0b896040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000f71573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019062000f9c91906200227b565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019062000ff3929190620015fe565b506001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f9ef19eae0bc3c3697a33bfce884cc412cef714b4f78e716dfafad37a8dd79a118560405162001080919062001917565b60405180910390a150505b505050565b60006200109c620008e6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620011225750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff165b62001164576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200115b9062001dfb565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603620011d5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620011cc9062001e93565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160149054906101000a900460ff1662001267576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200125e9062001f05565b60405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663bd041c4d3360006040518363ffffffff1660e01b81526004016200130c92919062001f27565b6020604051808303816000875af11580156200132c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001352919062001f7c565b91506002808111156200136a576200136962001a47565b5b82600281111562001380576200137f62001a47565b5b036200141b576000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160146101000a81548160ff0219169083151502179055507fcf051bc95b4ea55c0479a7233f52bbb7949eddaed918754bf20e0a066eb68dd08360405162001412919062001917565b60405180910390a15b50919050565b6200142b62001524565b73ffffffffffffffffffffffffffffffffffffffff166200144b620008e6565b73ffffffffffffffffffffffffffffffffffffffff1614620014a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200149b9062001d63565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362001516576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200150d9062002342565b60405180910390fd5b62001521816200152c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119e4806200236583390190565b8280546200160c9062001b13565b90600052602060002090601f0160209004810192826200163057600085556200167c565b82601f106200164b57805160ff19168380011785556200167c565b828001600101855582156200167c579182015b828111156200167b5782518255916020019190600101906200165e565b5b5090506200168b91906200168f565b5090565b5b80821115620016aa57600081600090555060010162001690565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620016ef82620016c2565b9050919050565b6200170181620016e2565b81146200170d57600080fd5b50565b6000813590506200172181620016f6565b92915050565b60006020828403121562001740576200173f620016b8565b5b6000620017508482850162001710565b91505092915050565b6200176481620016e2565b82525050565b6000819050919050565b6000620017956200178f6200178984620016c2565b6200176a565b620016c2565b9050919050565b6000620017a98262001774565b9050919050565b6000620017bd826200179c565b9050919050565b620017cf81620017b0565b82525050565b60008115159050919050565b620017ec81620017d5565b82525050565b600060608201905062001809600083018662001759565b620018186020830185620017c4565b620018276040830184620017e1565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200186b5780820151818401526020810190506200184e565b838111156200187b576000848401525b50505050565b6000601f19601f8301169050919050565b60006200189f826200182f565b620018ab81856200183a565b9350620018bd8185602086016200184b565b620018c88162001881565b840191505092915050565b6000606082019050620018ea600083018662001759565b8181036020830152620018fe818562001892565b90506200190f6040830184620017e1565b949350505050565b60006020820190506200192e600083018462001759565b92915050565b6000819050919050565b620019498162001934565b81146200195557600080fd5b50565b60008135905062001969816200193e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126200199757620019966200196f565b5b8235905067ffffffffffffffff811115620019b757620019b662001974565b5b602083019150836001820283011115620019d657620019d562001979565b5b9250929050565b600080600060408486031215620019f957620019f8620016b8565b5b600062001a098682870162001958565b935050602084013567ffffffffffffffff81111562001a2d5762001a2c620016bd565b5b62001a3b868287016200197e565b92509250509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811062001a8a5762001a8962001a47565b5b50565b600081905062001a9d8262001a76565b919050565b600062001aaf8262001a8d565b9050919050565b62001ac18162001aa2565b82525050565b600060208201905062001ade600083018462001ab6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062001b2c57607f821691505b60208210810362001b425762001b4162001ae4565b5b50919050565b7f6d616e616765722063616e206e6f74206a6f696e000000000000000000000000600082015250565b600062001b806014836200183a565b915062001b8d8262001b48565b602082019050919050565b6000602082019050818103600083015262001bb38162001b71565b9050919050565b7f6163636f756e7420686164206265656e206a6f696e65642e0000000000000000600082015250565b600062001bf26018836200183a565b915062001bff8262001bba565b602082019050919050565b6000602082019050818103600083015262001c258162001be3565b9050919050565b82818337600083830152505050565b600062001c4983856200183a565b935062001c5883858462001c2c565b62001c638362001881565b840190509392505050565b62001c798162001934565b82525050565b600060ff82169050919050565b62001c978162001c7f565b82525050565b600060c08201905062001cb4600083018a62001759565b818103602083015262001cc981888a62001c3b565b905062001cda604083018762001c6e565b62001ce9606083018662001759565b62001cf8608083018562001c8c565b62001d0760a083018462001c8c565b98975050505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600062001d4b6020836200183a565b915062001d588262001d13565b602082019050919050565b6000602082019050818103600083015262001d7e8162001d3c565b9050919050565b7f75736572206d757374206f776e6572206f72207573657220686164206265656e60008201527f206a6f696e65642e000000000000000000000000000000000000000000000000602082015250565b600062001de36028836200183a565b915062001df08262001d85565b604082019050919050565b6000602082019050818103600083015262001e168162001dd4565b9050919050565b7f757365722063616e206f6e6c7920766f746520666f72206f746865722075736560008201527f7273000000000000000000000000000000000000000000000000000000000000602082015250565b600062001e7b6022836200183a565b915062001e888262001e1d565b604082019050919050565b6000602082019050818103600083015262001eae8162001e6c565b9050919050565b7f70726f706f73616c206578697374730000000000000000000000000000000000600082015250565b600062001eed600f836200183a565b915062001efa8262001eb5565b602082019050919050565b6000602082019050818103600083015262001f208162001ede565b9050919050565b600060408201905062001f3e600083018562001759565b62001f4d6020830184620017e1565b9392505050565b6003811062001f6257600080fd5b50565b60008151905062001f768162001f54565b92915050565b60006020828403121562001f955762001f94620016b8565b5b600062001fa58482850162001f65565b91505092915050565b60008151905062001fbf816200193e565b92915050565b60006020828403121562001fde5762001fdd620016b8565b5b600062001fee8482850162001fae565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620020628262001934565b91506200206f8362001934565b92508262002082576200208162001ff7565b5b828204905092915050565b60006200209a8262001934565b9150620020a78362001934565b925082821015620020bd57620020bc62002026565b5b828203905092915050565b6000604082019050620020df600083018562001759565b620020ee602083018462001c6e565b9392505050565b6000815190506200210681620016f6565b92915050565b600060208284031215620021255762002124620016b8565b5b60006200213584828501620020f5565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200217d8262001881565b810181811067ffffffffffffffff821117156200219f576200219e62002143565b5b80604052505050565b6000620021b4620016ae565b9050620021c2828262002172565b919050565b600067ffffffffffffffff821115620021e557620021e462002143565b5b620021f08262001881565b9050602081019050919050565b6000620022146200220e84620021c7565b620021a8565b9050828152602081018484840111156200223357620022326200213e565b5b620022408482856200184b565b509392505050565b600082601f83011262002260576200225f6200196f565b5b815162002272848260208601620021fd565b91505092915050565b600060208284031215620022945762002293620016b8565b5b600082015167ffffffffffffffff811115620022b557620022b4620016bd565b5b620022c38482850162002248565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006200232a6026836200183a565b91506200233782620022cc565b604082019050919050565b600060208201905081810360008301526200235d816200231b565b905091905056fe60806040523480156200001157600080fd5b50604051620019e4380380620019e4833981810160405281019062000037919062000560565b620000576200004b6200016960201b60201c565b6200017160201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460039080519060200190620000f192919062000235565b5081600160146101000a81548160ff021916908360ff16021790555080600160156101000a81548160ff021916908360ff160217905550836004819055506000600560006101000a81548160ff021916908360028111156200015857620001576200061b565b5b0217905550505050505050620006ae565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620002439062000679565b90600052602060002090601f016020900481019282620002675760008555620002b3565b82601f106200028257805160ff1916838001178555620002b3565b82800160010185558215620002b3579182015b82811115620002b257825182559160200191906001019062000295565b5b509050620002c29190620002c6565b5090565b5b80821115620002e1576000816000905550600101620002c7565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032682620002f9565b9050919050565b620003388162000319565b81146200034457600080fd5b50565b60008151905062000358816200032d565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003b38262000368565b810181811067ffffffffffffffff82111715620003d557620003d462000379565b5b80604052505050565b6000620003ea620002e5565b9050620003f88282620003a8565b919050565b600067ffffffffffffffff8211156200041b576200041a62000379565b5b620004268262000368565b9050602081019050919050565b60005b838110156200045357808201518184015260208101905062000436565b8381111562000463576000848401525b50505050565b6000620004806200047a84620003fd565b620003de565b9050828152602081018484840111156200049f576200049e62000363565b5b620004ac84828562000433565b509392505050565b600082601f830112620004cc57620004cb6200035e565b5b8151620004de84826020860162000469565b91505092915050565b6000819050919050565b620004fc81620004e7565b81146200050857600080fd5b50565b6000815190506200051c81620004f1565b92915050565b600060ff82169050919050565b6200053a8162000522565b81146200054657600080fd5b50565b6000815190506200055a816200052f565b92915050565b60008060008060008060c0878903121562000580576200057f620002ef565b5b60006200059089828a0162000347565b965050602087015167ffffffffffffffff811115620005b457620005b3620002f4565b5b620005c289828a01620004b4565b9550506040620005d589828a016200050b565b9450506060620005e889828a0162000347565b9350506080620005fb89828a0162000549565b92505060a06200060e89828a0162000549565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200069257607f821691505b602082108103620006a857620006a76200064a565b5b50919050565b61132680620006be6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806386c1e7cb116100a2578063c040e6b811610071578063c040e6b81461029f578063c527290d146102bd578063d321fe29146102db578063f2fde38b146102f9578063fcaa76641461031557610116565b806386c1e7cb146102155780638da5cb5b14610233578063aa8c217c14610251578063bd041c4d1461026f57610116565b806353b60897116100e957806353b60897146101935780635a9b0b89146101b1578063644cd3c1146101cf578063715018a6146101ed578063832880e7146101f757610116565b806306fdde031461011b5780631b86bede14610139578063409e1f85146101575780634f8632ba14610175575b600080fd5b610123610333565b6040516101309190610dd9565b60405180910390f35b6101416103c1565b60405161014e9190610e17565b60405180910390f35b61015f6103d4565b60405161016c9190610e17565b60405180910390f35b61017d6103e7565b60405161018a9190610e73565b60405180910390f35b61019b61040d565b6040516101a89190610ea9565b60405180910390f35b6101b9610420565b6040516101c69190610dd9565b60405180910390f35b6101d76104b2565b6040516101e49190610e17565b60405180910390f35b6101f56104c5565b005b6101ff61054d565b60405161020c9190610e73565b60405180910390f35b61021d610577565b60405161022a9190610ea9565b60405180910390f35b61023b61058a565b6040516102489190610e73565b60405180910390f35b6102596105b3565b6040516102669190610edd565b60405180910390f35b61028960048036038101906102849190610f55565b6105b9565b604051610296919061100c565b60405180910390f35b6102a7610b36565b6040516102b4919061100c565b60405180910390f35b6102c5610b49565b6040516102d29190610e17565b60405180910390f35b6102e3610b5c565b6040516102f09190610edd565b60405180910390f35b610313600480360381019061030e9190611027565b610b66565b005b61031d610c5d565b60405161032a919061100c565b60405180910390f35b6003805461034090611083565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90611083565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b505050505081565b600560049054906101000a900460ff1681565b600160149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560029054906101000a900460ff1681565b60606003805461042f90611083565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611083565b80156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b5050505050905090565b600160159054906101000a900460ff1681565b6104cd610c74565b73ffffffffffffffffffffffffffffffffffffffff166104eb61058a565b73ffffffffffffffffffffffffffffffffffffffff1614610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890611100565b60405180910390fd5b61054b6000610c7c565b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560019054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b60006105c3610c74565b73ffffffffffffffffffffffffffffffffffffffff166105e161058a565b73ffffffffffffffffffffffffffffffffffffffff1614610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e90611100565b60405180910390fd5b600080600281111561064c5761064b610f95565b5b600560009054906101000a900460ff16600281111561066e5761066d610f95565b5b146106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a59061116c565b60405180910390fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1615806107575750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078d906111d8565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610825576001600560026101000a81548160ff02191690831515021790555082600560016101000a81548160ff021916908315150217905550610a0a565b821561091c576001600560039054906101000a900460ff166108479190611227565b600560036101000a81548160ff021916908360ff1602179055506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160156101000a81548160ff021916908315150217905550610a09565b6001600560049054906101000a900460ff166109389190611227565b600560036101000a81548160ff021916908360ff1602179055506001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff0219169083151502179055506000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160156101000a81548160ff0219169083151502179055505b5b600560029054906101000a900460ff168015610a325750600560019054906101000a900460ff165b8015610a625750600160149054906101000a900460ff1660ff16600560039054906101000a900460ff1660ff1610155b15610a93576001600560006101000a81548160ff02191690836002811115610a8d57610a8c610f95565b5b02179055505b600560029054906101000a900460ff168015610abc5750600560019054906101000a900460ff16155b8015610aec5750600160159054906101000a900460ff1660ff16600560049054906101000a900460ff1660ff1610155b15610b1d576002600560006101000a81548160ff02191690836002811115610b1757610b16610f95565b5b02179055505b600560009054906101000a900460ff1691505092915050565b600560009054906101000a900460ff1681565b600560039054906101000a900460ff1681565b6000600454905090565b610b6e610c74565b73ffffffffffffffffffffffffffffffffffffffff16610b8c61058a565b73ffffffffffffffffffffffffffffffffffffffff1614610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd990611100565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c48906112d0565b60405180910390fd5b610c5a81610c7c565b50565b6000600560009054906101000a900460ff16905090565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d7a578082015181840152602081019050610d5f565b83811115610d89576000848401525b50505050565b6000601f19601f8301169050919050565b6000610dab82610d40565b610db58185610d4b565b9350610dc5818560208601610d5c565b610dce81610d8f565b840191505092915050565b60006020820190508181036000830152610df38184610da0565b905092915050565b600060ff82169050919050565b610e1181610dfb565b82525050565b6000602082019050610e2c6000830184610e08565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5d82610e32565b9050919050565b610e6d81610e52565b82525050565b6000602082019050610e886000830184610e64565b92915050565b60008115159050919050565b610ea381610e8e565b82525050565b6000602082019050610ebe6000830184610e9a565b92915050565b6000819050919050565b610ed781610ec4565b82525050565b6000602082019050610ef26000830184610ece565b92915050565b600080fd5b610f0681610e52565b8114610f1157600080fd5b50565b600081359050610f2381610efd565b92915050565b610f3281610e8e565b8114610f3d57600080fd5b50565b600081359050610f4f81610f29565b92915050565b60008060408385031215610f6c57610f6b610ef8565b5b6000610f7a85828601610f14565b9250506020610f8b85828601610f40565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610fd557610fd4610f95565b5b50565b6000819050610fe682610fc4565b919050565b6000610ff682610fd8565b9050919050565b61100681610feb565b82525050565b60006020820190506110216000830184610ffd565b92915050565b60006020828403121561103d5761103c610ef8565b5b600061104b84828501610f14565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061109b57607f821691505b6020821081036110ae576110ad611054565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006110ea602083610d4b565b91506110f5826110b4565b602082019050919050565b60006020820190508181036000830152611119816110dd565b9050919050565b7f63757272656e742073746167652063616e206e6f74206f706572617465000000600082015250565b6000611156601d83610d4b565b915061116182611120565b602082019050919050565b6000602082019050818103600083015261118581611149565b9050919050565b7f7573657220686173206265656e20766f7465642e000000000000000000000000600082015250565b60006111c2601483610d4b565b91506111cd8261118c565b602082019050919050565b600060208201905081810360008301526111f1816111b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123282610dfb565b915061123d83610dfb565b92508260ff03821115611253576112526111f8565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112ba602683610d4b565b91506112c58261125e565b604082019050919050565b600060208201905081810360008301526112e9816112ad565b905091905056fea2646970667358221220ee6065086945257695c7cbf00118d055527604cba98683a52b7a2aecc7a703be64736f6c634300080d0033a2646970667358221220eee18eb763efd73de8f326362a02e1a95aff69c70865402fd1121e1539e1d31264736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:22161:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:9",
                "type": ""
              }
            ],
            "src": "466:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:9",
                "type": ""
              }
            ],
            "src": "568:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:9",
                "type": ""
              }
            ],
            "src": "696:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:9",
                "type": ""
              }
            ],
            "src": "841:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1258:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1281:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1263:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1236:3:9",
                "type": ""
              }
            ],
            "src": "1176:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1332:28:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1342:12:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1349:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "1342:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1318:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "1328:3:9",
                "type": ""
              }
            ],
            "src": "1300:60:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1426:82:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1436:66:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1494:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1476:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1476:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "1467:8:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1467:34:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1449:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:53:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1436:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1406:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1416:9:9",
                "type": ""
              }
            ],
            "src": "1366:142:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1574:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1584:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1628:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1597:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1597:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1584:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1554:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1564:9:9",
                "type": ""
              }
            ],
            "src": "1514:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1735:66:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1745:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1789:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1758:30:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1758:37:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1745:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_UserActivityProposal_$1562_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1715:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1725:9:9",
                "type": ""
              }
            ],
            "src": "1646:155:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1901:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1918:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1983:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_UserActivityProposal_$1562_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1923:59:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:66:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1911:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:79:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1911:79:9"
                }
              ]
            },
            "name": "abi_encode_t_contract$_UserActivityProposal_$1562_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1889:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1896:3:9",
                "type": ""
              }
            ],
            "src": "1807:189:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2044:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2054:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2079:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2072:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2072:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2054:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2026:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2036:7:9",
                "type": ""
              }
            ],
            "src": "2002:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2157:50:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2174:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2194:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2179:14:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2167:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2167:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2167:34:9"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2145:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2152:3:9",
                "type": ""
              }
            ],
            "src": "2098:109:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2390:311:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2400:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2412:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2423:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2408:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2408:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2400:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2480:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2493:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2504:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2489:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2489:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2436:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2436:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2590:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2603:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2614:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2599:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2599:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_UserActivityProposal_$1562_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2517:72:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:101:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2517:101:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2666:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2679:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2690:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2675:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2675:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2628:37:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2628:66:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2628:66:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_contract$_UserActivityProposal_$1562_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2346:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2358:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2366:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2374:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2385:4:9",
                "type": ""
              }
            ],
            "src": "2213:488:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2766:40:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2777:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2793:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2787:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2787:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2777:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2749:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2759:6:9",
                "type": ""
              }
            ],
            "src": "2707:99:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2908:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2925:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2930:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2918:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2918:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2918:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2946:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2965:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2970:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2961:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2961:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2946:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2880:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2885:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2896:11:9",
                "type": ""
              }
            ],
            "src": "2812:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3036:258:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3046:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3055:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3050:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3115:63:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3140:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3145:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3136:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3136:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3159:3:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3164:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3155:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3155:11:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3149:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3149:18:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3129:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3129:39:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3129:39:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3076:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3079:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3073:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3073:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3087:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3089:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3098:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3101:2:9",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3094:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3094:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3089:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3069:3:9",
                    "statements": []
                  },
                  "src": "3065:113:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3212:76:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3262:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3267:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3258:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3258:16:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3276:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3251:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3251:27:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3251:27:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3193:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3196:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3190:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3187:101:9"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3018:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3023:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3028:6:9",
                "type": ""
              }
            ],
            "src": "2987:307:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3348:54:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3358:38:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3376:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3383:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3372:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3372:14:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3392:2:9",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3388:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3388:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3368:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:28:9"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "3358:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3331:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "3341:6:9",
                "type": ""
              }
            ],
            "src": "3300:102:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3500:272:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3510:53:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3557:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3524:32:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3524:39:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3514:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3572:78:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3638:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3643:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3579:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3579:71:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3572:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3685:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3692:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3681:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3681:16:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3699:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3704:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3659:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3659:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3659:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3720:46:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3731:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3758:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "3736:21:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3736:29:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3727:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3727:39:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3720:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3481:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3488:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3496:3:9",
                "type": ""
              }
            ],
            "src": "3408:364:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3946:353:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3956:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3968:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3979:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3964:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3964:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3956:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4036:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4049:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4060:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4045:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4045:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3992:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3992:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3992:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4084:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4095:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4080:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4080:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4104:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4110:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4100:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4100:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4073:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:48:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4073:48:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4130:86:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4202:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4211:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4138:63:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:78:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4130:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4264:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4277:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4288:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4273:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4273:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4226:37:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:66:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4226:66:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_bool__to_t_address_t_string_memory_ptr_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3902:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3914:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3922:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3930:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3941:4:9",
                "type": ""
              }
            ],
            "src": "3778:521:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4403:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4413:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4425:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4436:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4421:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4421:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4413:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4493:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4506:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4517:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4502:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4502:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4449:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4449:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4449:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4375:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4387:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4398:4:9",
                "type": ""
              }
            ],
            "src": "4305:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4578:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4588:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4599:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4588:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4560:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4570:7:9",
                "type": ""
              }
            ],
            "src": "4533:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4659:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4716:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4725:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4728:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4718:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4718:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4718:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4682:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4707:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "4689:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4689:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4679:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4679:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4672:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4672:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4669:63:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4652:5:9",
                "type": ""
              }
            ],
            "src": "4616:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4796:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4806:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4828:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4815:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4815:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4806:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4871:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4844:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4844:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4844:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4774:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4782:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4790:5:9",
                "type": ""
              }
            ],
            "src": "4744:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4978:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4995:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4998:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4988:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4988:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4988:12:9"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "4889:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5101:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5118:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5121:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5111:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:12:9"
                }
              ]
            },
            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
            "nodeType": "YulFunctionDefinition",
            "src": "5012:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5224:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5241:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5244:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5234:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5234:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5234:12:9"
                }
              ]
            },
            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            "nodeType": "YulFunctionDefinition",
            "src": "5135:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5347:478:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5396:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "5398:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5398:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5398:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5375:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5383:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5371:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5371:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5390:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5367:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5367:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5360:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5360:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5357:122:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5488:30:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5511:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5498:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5498:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5488:6:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5561:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                            "nodeType": "YulIdentifier",
                            "src": "5563:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5563:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5563:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5533:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5541:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5530:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5530:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5527:117:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5653:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5669:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5677:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5665:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5665:17:9"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "5653:8:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5736:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            "nodeType": "YulIdentifier",
                            "src": "5738:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5738:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5738:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "5701:8:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "5715:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5723:4:9",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "5711:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5711:17:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5697:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5697:32:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5731:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5694:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5694:41:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5691:128:9"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5314:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5322:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "5330:8:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5340:6:9",
                "type": ""
              }
            ],
            "src": "5272:553:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5934:571:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5980:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5982:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5982:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5982:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5955:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5964:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5951:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5951:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5976:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5947:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5947:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5944:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6073:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6088:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6102:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6092:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6117:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6152:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6163:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6148:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6148:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6172:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6127:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6127:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6117:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6200:298:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6215:46:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6246:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6257:2:9",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6242:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6242:18:9"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "6229:12:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6229:32:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6219:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6308:83:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "6310:77:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6310:79:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6310:79:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6280:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6288:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6277:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6277:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "6274:117:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6405:83:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6460:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6471:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6456:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6456:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6480:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "6423:32:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6423:65:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "6405:6:9"
                        },
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "6413:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5888:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5899:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5911:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5919:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5927:6:9",
                "type": ""
              }
            ],
            "src": "5831:674:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6539:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6556:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6559:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6549:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6549:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6549:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6653:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6656:4:9",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6646:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6646:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6646:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6677:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6680:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6670:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6670:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6670:15:9"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "6511:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6750:62:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6784:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "6786:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6786:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6786:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6773:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6780:1:9",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6770:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6770:12:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6763:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6763:20:9"
                  },
                  "nodeType": "YulIf",
                  "src": "6760:46:9"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Stage_$1314",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6743:5:9",
                "type": ""
              }
            ],
            "src": "6697:115:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6873:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6883:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6894:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6883:7:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6937:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Stage_$1314",
                      "nodeType": "YulIdentifier",
                      "src": "6900:36:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6900:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6900:43:9"
                }
              ]
            },
            "name": "cleanup_t_enum$_Stage_$1314",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6855:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6865:7:9",
                "type": ""
              }
            ],
            "src": "6818:131:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7023:63:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7033:47:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7074:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Stage_$1314",
                      "nodeType": "YulIdentifier",
                      "src": "7046:27:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7046:34:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "7033:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Stage_$1314_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7003:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "7013:9:9",
                "type": ""
              }
            ],
            "src": "6955:131:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7165:74:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7182:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7226:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Stage_$1314_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "7187:38:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7187:45:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7175:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7175:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7175:58:9"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Stage_$1314_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7153:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7160:3:9",
                "type": ""
              }
            ],
            "src": "7092:147:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7351:132:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7361:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7373:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7384:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7369:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7369:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7361:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7449:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7462:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7473:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7458:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7458:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Stage_$1314_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7397:51:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7397:79:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7397:79:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_Stage_$1314__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7323:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7335:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7346:4:9",
                "type": ""
              }
            ],
            "src": "7245:238:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7517:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7534:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7537:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7527:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7527:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7527:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7631:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7634:4:9",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7624:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7624:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7624:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7655:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7658:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7648:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7648:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7648:15:9"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "7489:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7726:269:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7736:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7750:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7756:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7746:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7746:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7736:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7767:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7797:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7793:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7793:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7771:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7844:51:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7858:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7872:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7880:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7868:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7868:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7858:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7824:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7817:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7817:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7814:81:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7947:42:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "7961:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7961:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7961:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7911:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7934:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7942:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7931:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7931:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7908:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7908:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7905:84:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7710:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7719:6:9",
                "type": ""
              }
            ],
            "src": "7675:320:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8107:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8129:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8137:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8125:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8125:14:9"
                      },
                      {
                        "hexValue": "6d616e616765722063616e206e6f74206a6f696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8141:22:9",
                        "type": "",
                        "value": "manager can not join"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8118:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8118:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8118:46:9"
                }
              ]
            },
            "name": "store_literal_in_memory_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8099:6:9",
                "type": ""
              }
            ],
            "src": "8001:170:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8323:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8333:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8399:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8404:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8340:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8340:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8333:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8505:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71",
                      "nodeType": "YulIdentifier",
                      "src": "8416:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8416:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8416:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8518:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8529:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8534:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8525:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8525:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8518:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8311:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8319:3:9",
                "type": ""
              }
            ],
            "src": "8177:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8720:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8730:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8742:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8753:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8738:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8738:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8730:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8777:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8788:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8773:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8773:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8796:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8802:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8792:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8792:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8766:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8766:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8766:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8822:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8956:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8830:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8830:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8822:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8700:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8715:4:9",
                "type": ""
              }
            ],
            "src": "8549:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9080:68:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9102:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9110:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9098:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9098:14:9"
                      },
                      {
                        "hexValue": "6163636f756e7420686164206265656e206a6f696e65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9114:26:9",
                        "type": "",
                        "value": "account had been joined."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9091:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9091:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9091:50:9"
                }
              ]
            },
            "name": "store_literal_in_memory_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9072:6:9",
                "type": ""
              }
            ],
            "src": "8974:174:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9300:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9310:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9376:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9381:2:9",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9317:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9317:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9310:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9482:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a",
                      "nodeType": "YulIdentifier",
                      "src": "9393:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9393:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9393:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9495:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9506:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9511:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9502:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9502:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9495:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9288:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9296:3:9",
                "type": ""
              }
            ],
            "src": "9154:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9697:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9707:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9719:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9730:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9715:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9715:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9707:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9754:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9765:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9750:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9750:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9773:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9779:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9769:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9769:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9743:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9743:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9743:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9799:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9933:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9807:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9807:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9799:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9677:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9692:4:9",
                "type": ""
              }
            ],
            "src": "9526:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10002:103:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "10025:3:9"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "10030:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10035:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "10012:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10012:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10012:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "10083:3:9"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10088:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10079:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10079:16:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10097:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10072:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10072:27:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10072:27:9"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9984:3:9",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9989:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9994:6:9",
                "type": ""
              }
            ],
            "src": "9951:154:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10237:202:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10247:78:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10313:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10318:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10254:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10254:71:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10247:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "10359:5:9"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10366:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10371:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "10335:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10335:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10335:43:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10387:46:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10398:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10425:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "10403:21:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10403:29:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10394:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10394:39:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10387:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "10210:5:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10217:6:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10225:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10233:3:9",
                "type": ""
              }
            ],
            "src": "10135:304:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10510:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10527:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10550:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "10532:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10532:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10520:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10520:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10520:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10498:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10505:3:9",
                "type": ""
              }
            ],
            "src": "10445:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10612:43:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10622:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10637:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10644:4:9",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10633:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10633:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10622:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10594:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10604:7:9",
                "type": ""
              }
            ],
            "src": "10569:86:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10722:51:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10739:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10760:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "10744:15:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10744:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10732:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10732:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10732:35:9"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10710:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10717:3:9",
                "type": ""
              }
            ],
            "src": "10661:112:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11039:610:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11049:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11061:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11072:3:9",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11057:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11057:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11049:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11130:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11143:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11154:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11139:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11139:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11086:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11086:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11086:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11178:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11189:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11174:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11174:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11198:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11204:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11194:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11194:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11167:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11167:48:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11167:48:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11224:96:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11298:6:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11306:6:9"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11315:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11232:65:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11232:88:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11224:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11374:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11387:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11398:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11383:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11383:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11330:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11330:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11330:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "11456:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11469:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11480:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11465:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11465:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11412:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11412:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11412:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "11534:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11547:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11558:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11543:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11543:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11494:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11494:69:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11494:69:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "11613:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11626:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11637:3:9",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11622:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11622:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11573:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11573:69:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11573:69:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address_t_uint8_t_uint8__to_t_address_t_string_memory_ptr_t_uint256_t_address_t_uint8_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10963:9:9",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "10975:6:9",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "10983:6:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10991:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10999:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11007:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11015:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11023:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11034:4:9",
                "type": ""
              }
            ],
            "src": "10779:870:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11761:76:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11783:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11791:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11779:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11779:14:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11795:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11772:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11772:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11772:58:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11753:6:9",
                "type": ""
              }
            ],
            "src": "11655:182:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11989:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11999:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12065:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12070:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12006:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12006:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11999:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12171:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "12082:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12082:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12082:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12184:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12195:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12200:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12191:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12191:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12184:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11977:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11985:3:9",
                "type": ""
              }
            ],
            "src": "11843:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12386:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12396:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12408:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12419:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12404:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12404:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12396:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12443:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12454:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12439:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12439:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12462:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12468:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12458:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12458:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12432:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12432:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12432:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12488:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12622:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12496:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12496:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12488:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12366:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12381:4:9",
                "type": ""
              }
            ],
            "src": "12215:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12746:121:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12768:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12776:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12764:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12764:14:9"
                      },
                      {
                        "hexValue": "75736572206d757374206f776e6572206f72207573657220686164206265656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12780:34:9",
                        "type": "",
                        "value": "user must owner or user had been"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12757:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12757:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12757:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12836:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12844:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12832:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12832:15:9"
                      },
                      {
                        "hexValue": "206a6f696e65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12849:10:9",
                        "type": "",
                        "value": " joined."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12825:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12825:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12825:35:9"
                }
              ]
            },
            "name": "store_literal_in_memory_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12738:6:9",
                "type": ""
              }
            ],
            "src": "12640:227:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13019:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13029:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13095:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13100:2:9",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13036:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13036:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13029:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13201:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21",
                      "nodeType": "YulIdentifier",
                      "src": "13112:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13112:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13112:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13214:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13225:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13230:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13221:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13221:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13214:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13007:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13015:3:9",
                "type": ""
              }
            ],
            "src": "12873:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13416:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13426:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13438:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13449:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13434:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13434:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13426:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13473:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13484:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13469:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13469:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13492:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13498:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13488:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13488:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13462:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13462:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13462:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13518:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13652:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13526:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13526:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13518:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13396:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13411:4:9",
                "type": ""
              }
            ],
            "src": "13245:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13776:115:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13798:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13806:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13794:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13794:14:9"
                      },
                      {
                        "hexValue": "757365722063616e206f6e6c7920766f746520666f72206f7468657220757365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13810:34:9",
                        "type": "",
                        "value": "user can only vote for other use"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13787:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13787:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13787:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13866:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13874:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13862:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13862:15:9"
                      },
                      {
                        "hexValue": "7273",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13879:4:9",
                        "type": "",
                        "value": "rs"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13855:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13855:29:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13855:29:9"
                }
              ]
            },
            "name": "store_literal_in_memory_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13768:6:9",
                "type": ""
              }
            ],
            "src": "13670:221:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14043:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14053:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14119:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14124:2:9",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14060:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14060:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14053:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14225:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16",
                      "nodeType": "YulIdentifier",
                      "src": "14136:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14136:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14136:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14238:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14249:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14254:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14245:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14245:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14238:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14031:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14039:3:9",
                "type": ""
              }
            ],
            "src": "13897:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14440:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14450:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14462:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14473:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14458:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14458:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14450:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14497:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14508:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14493:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14493:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14516:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14522:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14512:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14512:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14486:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14486:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14486:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14542:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14676:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14550:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14550:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14542:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14420:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14435:4:9",
                "type": ""
              }
            ],
            "src": "14269:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14800:59:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14822:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14830:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14818:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14818:14:9"
                      },
                      {
                        "hexValue": "70726f706f73616c20657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14834:17:9",
                        "type": "",
                        "value": "proposal exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14811:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14811:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14811:41:9"
                }
              ]
            },
            "name": "store_literal_in_memory_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14792:6:9",
                "type": ""
              }
            ],
            "src": "14694:165:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15011:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15021:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15087:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15092:2:9",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15028:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15028:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15021:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15193:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd",
                      "nodeType": "YulIdentifier",
                      "src": "15104:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15104:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15104:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15206:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15217:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15222:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15213:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15213:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15206:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14999:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15007:3:9",
                "type": ""
              }
            ],
            "src": "14865:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15408:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15418:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15430:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15441:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15426:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15426:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15418:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15465:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15476:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15461:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15461:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15484:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15490:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15480:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15480:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15454:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15454:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15454:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15510:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15644:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15518:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15518:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15510:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15388:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15403:4:9",
                "type": ""
              }
            ],
            "src": "15237:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15782:200:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15792:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15804:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15815:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15800:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15800:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15792:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15872:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15885:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15896:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15881:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15881:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15828:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15828:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15828:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15947:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15960:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15971:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15956:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15956:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15909:37:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15909:66:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15909:66:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15746:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15758:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15766:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15777:4:9",
                "type": ""
              }
            ],
            "src": "15662:320:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16041:56:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16075:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16084:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16087:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16077:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16077:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16077:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16064:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16071:1:9",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "16061:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16061:12:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16054:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16054:20:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16051:40:9"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Stage_$1314",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16034:5:9",
                "type": ""
              }
            ],
            "src": "15988:109:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16176:90:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16186:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "16201:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16195:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16195:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "16186:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16254:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Stage_$1314",
                      "nodeType": "YulIdentifier",
                      "src": "16217:36:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16217:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16217:43:9"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Stage_$1314_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "16154:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16162:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16170:5:9",
                "type": ""
              }
            ],
            "src": "16103:163:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16359:284:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16405:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "16407:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16407:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16407:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "16380:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16389:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16376:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16376:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16401:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "16372:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16372:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16369:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "16498:138:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "16513:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16527:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "16517:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "16542:84:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "16598:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "16609:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16594:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16594:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "16618:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Stage_$1314_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "16552:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16552:74:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "16542:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Stage_$1314_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16329:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "16340:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16352:6:9",
                "type": ""
              }
            ],
            "src": "16272:371:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16712:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16722:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "16737:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16731:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16731:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "16722:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16780:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16753:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16753:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16753:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "16690:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16698:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16706:5:9",
                "type": ""
              }
            ],
            "src": "16649:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16875:274:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16921:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "16923:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16923:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16923:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "16896:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16905:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16892:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16892:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16917:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "16888:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16888:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16885:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17014:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17029:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17043:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "17033:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "17058:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17104:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "17115:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17100:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17100:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "17124:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "17068:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17068:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "17058:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16845:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "16856:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16868:6:9",
                "type": ""
              }
            ],
            "src": "16798:351:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17183:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17200:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17203:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17193:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17193:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17193:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17297:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17300:4:9",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17290:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17290:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17290:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17321:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17324:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17314:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17314:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17314:15:9"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "17155:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17369:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17386:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17389:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17379:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17379:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17379:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17483:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17486:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17476:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17476:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17476:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17507:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17510:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17500:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17500:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17500:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "17341:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17569:143:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17579:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17602:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17584:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17584:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17579:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17613:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17636:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17618:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17618:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17613:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17660:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "17662:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17662:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17662:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17657:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17650:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17650:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "17647:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17692:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17701:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17704:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "17697:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17697:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "17692:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17558:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17561:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "17567:1:9",
                "type": ""
              }
            ],
            "src": "17527:185:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17763:146:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17773:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17796:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17778:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17778:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17773:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17807:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17830:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17812:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17812:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17807:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17854:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17856:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17856:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17856:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17848:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17851:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17845:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17845:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "17842:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17886:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17898:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17901:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17894:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17894:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17886:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17749:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17752:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17758:4:9",
                "type": ""
              }
            ],
            "src": "17718:191:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18041:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18051:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18063:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18074:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18059:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18059:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18051:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18131:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18144:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18155:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18140:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18140:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18087:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18087:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18087:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18212:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18225:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18236:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18221:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18221:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18168:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18168:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18168:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18005:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18017:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18025:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18036:4:9",
                "type": ""
              }
            ],
            "src": "17915:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18316:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18326:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "18341:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "18335:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18335:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "18326:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18384:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "18357:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18357:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18357:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "18294:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18302:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18310:5:9",
                "type": ""
              }
            ],
            "src": "18253:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18479:274:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18525:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "18527:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18527:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18527:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18500:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18509:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18496:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18496:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18521:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "18492:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18492:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "18489:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "18618:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "18633:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18647:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "18637:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18662:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18708:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "18719:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18704:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18704:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18728:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "18672:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18672:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "18662:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18449:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "18460:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18472:6:9",
                "type": ""
              }
            ],
            "src": "18402:351:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18848:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18865:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18868:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18858:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18858:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18858:12:9"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "18759:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18910:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18927:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18930:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18920:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18920:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18920:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19024:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19027:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19017:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19017:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19017:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19048:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19051:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19041:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19041:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19041:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "18882:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19111:238:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19121:58:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "19143:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "19173:4:9"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "19151:21:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19151:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19139:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19139:40:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "19125:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19290:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "19292:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19292:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19292:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "19233:10:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19245:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "19230:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19230:34:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "19269:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19281:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "19266:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19266:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "19227:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19227:62:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19224:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19328:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "19332:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19321:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19321:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19321:22:9"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19097:6:9",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "19105:4:9",
                "type": ""
              }
            ],
            "src": "19068:281:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19396:88:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19406:30:9",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "19416:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19416:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "19406:6:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "19465:6:9"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "19473:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "19445:19:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19445:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19445:33:9"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "19380:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19389:6:9",
                "type": ""
              }
            ],
            "src": "19355:129:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19557:241:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19662:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "19664:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19664:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19664:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19634:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19642:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "19631:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19631:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19628:56:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19694:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19724:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "19702:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19702:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "19694:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19768:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "19780:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19786:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19776:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19776:15:9"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "19768:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19541:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "19552:4:9",
                "type": ""
              }
            ],
            "src": "19490:308:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19899:326:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19909:75:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "19976:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "19934:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19934:49:9"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "19918:15:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19918:66:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "19909:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "20000:5:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20007:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19993:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19993:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19993:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20023:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "20038:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20045:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20034:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20034:16:9"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "20027:3:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20088:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "20090:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20090:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20090:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "20069:3:9"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "20074:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20065:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20065:16:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "20083:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20062:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20062:25:9"
                  },
                  "nodeType": "YulIf",
                  "src": "20059:112:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "20202:3:9"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "20207:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20212:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "20180:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20180:39:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20180:39:9"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "19872:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19877:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19885:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "19893:5:9",
                "type": ""
              }
            ],
            "src": "19804:421:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20318:282:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20367:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "20369:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20369:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20369:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "20346:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20354:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20342:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20342:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "20361:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "20338:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20338:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "20331:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20331:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "20328:122:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20459:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "20479:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "20473:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20473:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "20463:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20495:99:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "20567:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20575:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20563:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20563:17:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20582:6:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "20590:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "20504:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20504:90:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "20495:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "20296:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20304:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "20312:5:9",
                "type": ""
              }
            ],
            "src": "20245:355:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20693:437:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20739:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "20741:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20741:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20741:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "20714:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20723:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20710:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20710:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20735:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "20706:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20706:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "20703:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "20832:291:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "20847:38:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20871:9:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20882:1:9",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20867:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20867:17:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "20861:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20861:24:9"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "20851:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "20932:83:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "20934:77:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "20934:79:9"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "20934:79:9"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "20904:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20912:18:9",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "20901:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20901:30:9"
                      },
                      "nodeType": "YulIf",
                      "src": "20898:117:9"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "21029:84:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "21085:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "21096:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "21081:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21081:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "21105:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "21039:41:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21039:74:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "21029:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20663:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "20674:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20686:6:9",
                "type": ""
              }
            ],
            "src": "20606:524:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21242:119:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21264:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21272:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21260:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21260:14:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21276:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21253:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21253:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21253:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21332:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21340:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21328:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21328:15:9"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21345:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21321:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21321:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21321:33:9"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21234:6:9",
                "type": ""
              }
            ],
            "src": "21136:225:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21513:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21523:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21589:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21594:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21530:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21530:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21523:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21695:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "21606:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21606:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21606:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21708:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21719:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21724:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21715:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21715:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21708:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21501:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21509:3:9",
                "type": ""
              }
            ],
            "src": "21367:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21910:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21920:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21932:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21943:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21928:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21928:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21920:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21967:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21978:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21963:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21963:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21986:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21992:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21982:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21982:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21956:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21956:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21956:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22012:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22146:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22020:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22020:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22012:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21890:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21905:4:9",
                "type": ""
              }
            ],
            "src": "21739:419:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_UserActivityProposal_$1562_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_UserActivityProposal_$1562_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_UserActivityProposal_$1562_to_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_contract$_UserActivityProposal_$1562_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_UserActivityProposal_$1562_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_bool__to_t_address_t_string_memory_ptr_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Stage_$1314(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Stage_$1314(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stage_$1314(value)\n    }\n\n    function convert_t_enum$_Stage_$1314_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stage_$1314(value)\n    }\n\n    function abi_encode_t_enum$_Stage_$1314_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stage_$1314_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Stage_$1314__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Stage_$1314_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71(memPtr) {\n\n        mstore(add(memPtr, 0), \"manager can not join\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a(memPtr) {\n\n        mstore(add(memPtr, 0), \"account had been joined.\")\n\n    }\n\n    function abi_encode_t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_string_calldata_ptr_t_uint256_t_address_t_uint8_t_uint8__to_t_address_t_string_memory_ptr_t_uint256_t_address_t_uint8_t_uint8__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value5,  add(headStart, 128))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value6,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21(memPtr) {\n\n        mstore(add(memPtr, 0), \"user must owner or user had been\")\n\n        mstore(add(memPtr, 32), \" joined.\")\n\n    }\n\n    function abi_encode_t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16(memPtr) {\n\n        mstore(add(memPtr, 0), \"user can only vote for other use\")\n\n        mstore(add(memPtr, 32), \"rs\")\n\n    }\n\n    function abi_encode_t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"proposal exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_enum$_Stage_$1314(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Stage_$1314_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_Stage_$1314(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Stage_$1314_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Stage_$1314_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "210:3582:7:-:0;;;785:197;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;833:17:7::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;819:11;;:31;;;;;;;;;;;;;;;;;;874:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;860:11;;:37;;;;;;;;;;;;;;;;;;935:1;907:6;:25;;;:29;;;;;;;;;;;;;;;;;;974:1;946:6;:25;;;:29;;;;;;;;;;;;;;;;;;210:3582:::0;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;210:3582:7:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "210:3582:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:58;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;636:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3557:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1146:859;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;3673:116:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2012:923:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2941:610;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;691:58:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;636:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3557:110::-;3605:16;3648:11;;;;;;;;;;;3633:27;;3557:110;:::o;1146:859::-;1220:24;1275:10;1264:21;;:7;:5;:7::i;:::-;:21;;;1256:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1329:10;:22;1340:10;1329:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;1328:30;1320:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1401:18;:30;1420:10;1401:30;;;;;;;;;;;;;;;:37;;;;;;;;;;;;1398:208;;;1459:67;1485:18;:30;1504:10;1485:30;;;;;;;;;;;;;;;:39;;;;;;;;;;;;1459:67;;;;;;:::i;:::-;;;;;;;;1555:18;:30;1574:10;1555:30;;;;;;;;;;;;;;;:39;;;;;;;;;;;;1540:55;;;;1398:208;1616:29;1673:10;1685:11;;1698:6;1707:7;:5;:7::i;:::-;1716:6;:25;;;;;;;;;;;;1743:6;:25;;;;;;;;;;;;1648:121;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1616:153;;1821:8;1779:18;:30;1798:10;1779:30;;;;;;;;;;;;;;;:39;;;:50;;;;;;;;;;;;;;;;;;1879:4;1839:18;:30;1858:10;1839:30;;;;;;;;;;;;;;;:37;;;:44;;;;;;;;;;;;;;;;;;1899:34;1923:8;1899:34;;;;;;:::i;:::-;;;;;;;;1958:18;:30;1977:10;1958:30;;;;;;;;;;;;;;;:39;;;;;;;;;;;;1943:55;;;1146:859;;;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3673:116:7:-;3727:16;3770:11;;;;;;;;;;;3755:27;;3673:116;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2012:923:7:-;2078:7;:5;:7::i;:::-;2064:21;;:10;:21;;;:54;;;;2089:10;:22;2100:10;2089:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;2064:54;2056:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;2194:2;2180:16;;:10;:16;;;2172:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2252:18;:22;2271:2;2252:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;2244:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2311:29;2343:18;:22;2362:2;2343:22;;;;;;;;;;;;;;;:31;;;;;;;;;;;;2311:63;;2383:32;2418:8;:13;;;2432:10;2444:4;2418:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2383:66;;2470:31;2461:40;;;;;;;;:::i;:::-;;:5;:40;;;;;;;;:::i;:::-;;;2458:471;;2516:19;2561:1;2538:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;;;:::i;:::-;2516:46;;2575:25;2626:11;2603:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;2575:62;;2651:11;;;;;;;;;;;:16;;;2668:2;2672:11;2651:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:11;;;;;;;;;;;:16;;;2714:2;2718:17;2697:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2772:8;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2750:10;:14;2761:2;2750:14;;;;;;;;;;;;;;;:19;;;:40;;;;;;;;;;;;;;;;;;2825:8;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2803:10;:14;2814:2;2803:14;;;;;;;;;;;;;;;:19;;:40;;;;;;;;;;;;:::i;:::-;;2880:4;2856:10;:14;2867:2;2856:14;;;;;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;2903:16;2916:2;2903:16;;;;;;:::i;:::-;;;;;;;;2503:426;;2458:471;2047:888;;2012:923;:::o;2941:610::-;2984:32;3049:7;:5;:7::i;:::-;3035:21;;:10;:21;;;:54;;;;3060:10;:22;3071:10;3060:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3035:54;3027:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;3165:2;3151:16;;:10;:16;;;3143:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3223:18;:22;3242:2;3223:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3215:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3281:29;3313:18;:22;3332:2;3313:22;;;;;;;;;;;;;;;:31;;;;;;;;;;;;3281:63;;3361:8;:13;;;3375:10;3387:5;3361:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3353:40;;3414:33;3405:42;;;;;;;;:::i;:::-;;:5;:42;;;;;;;;:::i;:::-;;;3402:143;;3494:5;3462:18;:22;3481:2;3462:22;;;;;;;;;;;;;;;:29;;;:37;;;;;;;;;;;;;;;;;;3517:18;3532:2;3517:18;;;;;;:::i;:::-;;;;;;;;3402:143;3018:533;2941:610;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:60::-;1328:3;1349:5;1342:12;;1300:60;;;:::o;1366:142::-;1416:9;1449:53;1467:34;1476:24;1494:5;1476:24;:::i;:::-;1467:34;:::i;:::-;1449:53;:::i;:::-;1436:66;;1366:142;;;:::o;1514:126::-;1564:9;1597:37;1628:5;1597:37;:::i;:::-;1584:50;;1514:126;;;:::o;1646:155::-;1725:9;1758:37;1789:5;1758:37;:::i;:::-;1745:50;;1646:155;;;:::o;1807:189::-;1923:66;1983:5;1923:66;:::i;:::-;1918:3;1911:79;1807:189;;:::o;2002:90::-;2036:7;2079:5;2072:13;2065:21;2054:32;;2002:90;;;:::o;2098:109::-;2179:21;2194:5;2179:21;:::i;:::-;2174:3;2167:34;2098:109;;:::o;2213:488::-;2385:4;2423:2;2412:9;2408:18;2400:26;;2436:71;2504:1;2493:9;2489:17;2480:6;2436:71;:::i;:::-;2517:101;2614:2;2603:9;2599:18;2590:6;2517:101;:::i;:::-;2628:66;2690:2;2679:9;2675:18;2666:6;2628:66;:::i;:::-;2213:488;;;;;;:::o;2707:99::-;2759:6;2793:5;2787:12;2777:22;;2707:99;;;:::o;2812:169::-;2896:11;2930:6;2925:3;2918:19;2970:4;2965:3;2961:14;2946:29;;2812:169;;;;:::o;2987:307::-;3055:1;3065:113;3079:6;3076:1;3073:13;3065:113;;;3164:1;3159:3;3155:11;3149:18;3145:1;3140:3;3136:11;3129:39;3101:2;3098:1;3094:10;3089:15;;3065:113;;;3196:6;3193:1;3190:13;3187:101;;;3276:1;3267:6;3262:3;3258:16;3251:27;3187:101;3036:258;2987:307;;;:::o;3300:102::-;3341:6;3392:2;3388:7;3383:2;3376:5;3372:14;3368:28;3358:38;;3300:102;;;:::o;3408:364::-;3496:3;3524:39;3557:5;3524:39;:::i;:::-;3579:71;3643:6;3638:3;3579:71;:::i;:::-;3572:78;;3659:52;3704:6;3699:3;3692:4;3685:5;3681:16;3659:52;:::i;:::-;3736:29;3758:6;3736:29;:::i;:::-;3731:3;3727:39;3720:46;;3500:272;3408:364;;;;:::o;3778:521::-;3941:4;3979:2;3968:9;3964:18;3956:26;;3992:71;4060:1;4049:9;4045:17;4036:6;3992:71;:::i;:::-;4110:9;4104:4;4100:20;4095:2;4084:9;4080:18;4073:48;4138:78;4211:4;4202:6;4138:78;:::i;:::-;4130:86;;4226:66;4288:2;4277:9;4273:18;4264:6;4226:66;:::i;:::-;3778:521;;;;;;:::o;4305:222::-;4398:4;4436:2;4425:9;4421:18;4413:26;;4449:71;4517:1;4506:9;4502:17;4493:6;4449:71;:::i;:::-;4305:222;;;;:::o;4533:77::-;4570:7;4599:5;4588:16;;4533:77;;;:::o;4616:122::-;4689:24;4707:5;4689:24;:::i;:::-;4682:5;4679:35;4669:63;;4728:1;4725;4718:12;4669:63;4616:122;:::o;4744:139::-;4790:5;4828:6;4815:20;4806:29;;4844:33;4871:5;4844:33;:::i;:::-;4744:139;;;;:::o;4889:117::-;4998:1;4995;4988:12;5012:117;5121:1;5118;5111:12;5135:117;5244:1;5241;5234:12;5272:553;5330:8;5340:6;5390:3;5383:4;5375:6;5371:17;5367:27;5357:122;;5398:79;;:::i;:::-;5357:122;5511:6;5498:20;5488:30;;5541:18;5533:6;5530:30;5527:117;;;5563:79;;:::i;:::-;5527:117;5677:4;5669:6;5665:17;5653:29;;5731:3;5723:4;5715:6;5711:17;5701:8;5697:32;5694:41;5691:128;;;5738:79;;:::i;:::-;5691:128;5272:553;;;;;:::o;5831:674::-;5911:6;5919;5927;5976:2;5964:9;5955:7;5951:23;5947:32;5944:119;;;5982:79;;:::i;:::-;5944:119;6102:1;6127:53;6172:7;6163:6;6152:9;6148:22;6127:53;:::i;:::-;6117:63;;6073:117;6257:2;6246:9;6242:18;6229:32;6288:18;6280:6;6277:30;6274:117;;;6310:79;;:::i;:::-;6274:117;6423:65;6480:7;6471:6;6460:9;6456:22;6423:65;:::i;:::-;6405:83;;;;6200:298;5831:674;;;;;:::o;6511:180::-;6559:77;6556:1;6549:88;6656:4;6653:1;6646:15;6680:4;6677:1;6670:15;6697:115;6780:1;6773:5;6770:12;6760:46;;6786:18;;:::i;:::-;6760:46;6697:115;:::o;6818:131::-;6865:7;6894:5;6883:16;;6900:43;6937:5;6900:43;:::i;:::-;6818:131;;;:::o;6955:::-;7013:9;7046:34;7074:5;7046:34;:::i;:::-;7033:47;;6955:131;;;:::o;7092:147::-;7187:45;7226:5;7187:45;:::i;:::-;7182:3;7175:58;7092:147;;:::o;7245:238::-;7346:4;7384:2;7373:9;7369:18;7361:26;;7397:79;7473:1;7462:9;7458:17;7449:6;7397:79;:::i;:::-;7245:238;;;;:::o;7489:180::-;7537:77;7534:1;7527:88;7634:4;7631:1;7624:15;7658:4;7655:1;7648:15;7675:320;7719:6;7756:1;7750:4;7746:12;7736:22;;7803:1;7797:4;7793:12;7824:18;7814:81;;7880:4;7872:6;7868:17;7858:27;;7814:81;7942:2;7934:6;7931:14;7911:18;7908:38;7905:84;;7961:18;;:::i;:::-;7905:84;7726:269;7675:320;;;:::o;8001:170::-;8141:22;8137:1;8129:6;8125:14;8118:46;8001:170;:::o;8177:366::-;8319:3;8340:67;8404:2;8399:3;8340:67;:::i;:::-;8333:74;;8416:93;8505:3;8416:93;:::i;:::-;8534:2;8529:3;8525:12;8518:19;;8177:366;;;:::o;8549:419::-;8715:4;8753:2;8742:9;8738:18;8730:26;;8802:9;8796:4;8792:20;8788:1;8777:9;8773:17;8766:47;8830:131;8956:4;8830:131;:::i;:::-;8822:139;;8549:419;;;:::o;8974:174::-;9114:26;9110:1;9102:6;9098:14;9091:50;8974:174;:::o;9154:366::-;9296:3;9317:67;9381:2;9376:3;9317:67;:::i;:::-;9310:74;;9393:93;9482:3;9393:93;:::i;:::-;9511:2;9506:3;9502:12;9495:19;;9154:366;;;:::o;9526:419::-;9692:4;9730:2;9719:9;9715:18;9707:26;;9779:9;9773:4;9769:20;9765:1;9754:9;9750:17;9743:47;9807:131;9933:4;9807:131;:::i;:::-;9799:139;;9526:419;;;:::o;9951:154::-;10035:6;10030:3;10025;10012:30;10097:1;10088:6;10083:3;10079:16;10072:27;9951:154;;;:::o;10135:304::-;10233:3;10254:71;10318:6;10313:3;10254:71;:::i;:::-;10247:78;;10335:43;10371:6;10366:3;10359:5;10335:43;:::i;:::-;10403:29;10425:6;10403:29;:::i;:::-;10398:3;10394:39;10387:46;;10135:304;;;;;:::o;10445:118::-;10532:24;10550:5;10532:24;:::i;:::-;10527:3;10520:37;10445:118;;:::o;10569:86::-;10604:7;10644:4;10637:5;10633:16;10622:27;;10569:86;;;:::o;10661:112::-;10744:22;10760:5;10744:22;:::i;:::-;10739:3;10732:35;10661:112;;:::o;10779:870::-;11034:4;11072:3;11061:9;11057:19;11049:27;;11086:71;11154:1;11143:9;11139:17;11130:6;11086:71;:::i;:::-;11204:9;11198:4;11194:20;11189:2;11178:9;11174:18;11167:48;11232:88;11315:4;11306:6;11298;11232:88;:::i;:::-;11224:96;;11330:72;11398:2;11387:9;11383:18;11374:6;11330:72;:::i;:::-;11412;11480:2;11469:9;11465:18;11456:6;11412:72;:::i;:::-;11494:69;11558:3;11547:9;11543:19;11534:6;11494:69;:::i;:::-;11573;11637:3;11626:9;11622:19;11613:6;11573:69;:::i;:::-;10779:870;;;;;;;;;;:::o;11655:182::-;11795:34;11791:1;11783:6;11779:14;11772:58;11655:182;:::o;11843:366::-;11985:3;12006:67;12070:2;12065:3;12006:67;:::i;:::-;11999:74;;12082:93;12171:3;12082:93;:::i;:::-;12200:2;12195:3;12191:12;12184:19;;11843:366;;;:::o;12215:419::-;12381:4;12419:2;12408:9;12404:18;12396:26;;12468:9;12462:4;12458:20;12454:1;12443:9;12439:17;12432:47;12496:131;12622:4;12496:131;:::i;:::-;12488:139;;12215:419;;;:::o;12640:227::-;12780:34;12776:1;12768:6;12764:14;12757:58;12849:10;12844:2;12836:6;12832:15;12825:35;12640:227;:::o;12873:366::-;13015:3;13036:67;13100:2;13095:3;13036:67;:::i;:::-;13029:74;;13112:93;13201:3;13112:93;:::i;:::-;13230:2;13225:3;13221:12;13214:19;;12873:366;;;:::o;13245:419::-;13411:4;13449:2;13438:9;13434:18;13426:26;;13498:9;13492:4;13488:20;13484:1;13473:9;13469:17;13462:47;13526:131;13652:4;13526:131;:::i;:::-;13518:139;;13245:419;;;:::o;13670:221::-;13810:34;13806:1;13798:6;13794:14;13787:58;13879:4;13874:2;13866:6;13862:15;13855:29;13670:221;:::o;13897:366::-;14039:3;14060:67;14124:2;14119:3;14060:67;:::i;:::-;14053:74;;14136:93;14225:3;14136:93;:::i;:::-;14254:2;14249:3;14245:12;14238:19;;13897:366;;;:::o;14269:419::-;14435:4;14473:2;14462:9;14458:18;14450:26;;14522:9;14516:4;14512:20;14508:1;14497:9;14493:17;14486:47;14550:131;14676:4;14550:131;:::i;:::-;14542:139;;14269:419;;;:::o;14694:165::-;14834:17;14830:1;14822:6;14818:14;14811:41;14694:165;:::o;14865:366::-;15007:3;15028:67;15092:2;15087:3;15028:67;:::i;:::-;15021:74;;15104:93;15193:3;15104:93;:::i;:::-;15222:2;15217:3;15213:12;15206:19;;14865:366;;;:::o;15237:419::-;15403:4;15441:2;15430:9;15426:18;15418:26;;15490:9;15484:4;15480:20;15476:1;15465:9;15461:17;15454:47;15518:131;15644:4;15518:131;:::i;:::-;15510:139;;15237:419;;;:::o;15662:320::-;15777:4;15815:2;15804:9;15800:18;15792:26;;15828:71;15896:1;15885:9;15881:17;15872:6;15828:71;:::i;:::-;15909:66;15971:2;15960:9;15956:18;15947:6;15909:66;:::i;:::-;15662:320;;;;;:::o;15988:109::-;16071:1;16064:5;16061:12;16051:40;;16087:1;16084;16077:12;16051:40;15988:109;:::o;16103:163::-;16170:5;16201:6;16195:13;16186:22;;16217:43;16254:5;16217:43;:::i;:::-;16103:163;;;;:::o;16272:371::-;16352:6;16401:2;16389:9;16380:7;16376:23;16372:32;16369:119;;;16407:79;;:::i;:::-;16369:119;16527:1;16552:74;16618:7;16609:6;16598:9;16594:22;16552:74;:::i;:::-;16542:84;;16498:138;16272:371;;;;:::o;16649:143::-;16706:5;16737:6;16731:13;16722:22;;16753:33;16780:5;16753:33;:::i;:::-;16649:143;;;;:::o;16798:351::-;16868:6;16917:2;16905:9;16896:7;16892:23;16888:32;16885:119;;;16923:79;;:::i;:::-;16885:119;17043:1;17068:64;17124:7;17115:6;17104:9;17100:22;17068:64;:::i;:::-;17058:74;;17014:128;16798:351;;;;:::o;17155:180::-;17203:77;17200:1;17193:88;17300:4;17297:1;17290:15;17324:4;17321:1;17314:15;17341:180;17389:77;17386:1;17379:88;17486:4;17483:1;17476:15;17510:4;17507:1;17500:15;17527:185;17567:1;17584:20;17602:1;17584:20;:::i;:::-;17579:25;;17618:20;17636:1;17618:20;:::i;:::-;17613:25;;17657:1;17647:35;;17662:18;;:::i;:::-;17647:35;17704:1;17701;17697:9;17692:14;;17527:185;;;;:::o;17718:191::-;17758:4;17778:20;17796:1;17778:20;:::i;:::-;17773:25;;17812:20;17830:1;17812:20;:::i;:::-;17807:25;;17851:1;17848;17845:8;17842:34;;;17856:18;;:::i;:::-;17842:34;17901:1;17898;17894:9;17886:17;;17718:191;;;;:::o;17915:332::-;18036:4;18074:2;18063:9;18059:18;18051:26;;18087:71;18155:1;18144:9;18140:17;18131:6;18087:71;:::i;:::-;18168:72;18236:2;18225:9;18221:18;18212:6;18168:72;:::i;:::-;17915:332;;;;;:::o;18253:143::-;18310:5;18341:6;18335:13;18326:22;;18357:33;18384:5;18357:33;:::i;:::-;18253:143;;;;:::o;18402:351::-;18472:6;18521:2;18509:9;18500:7;18496:23;18492:32;18489:119;;;18527:79;;:::i;:::-;18489:119;18647:1;18672:64;18728:7;18719:6;18708:9;18704:22;18672:64;:::i;:::-;18662:74;;18618:128;18402:351;;;;:::o;18759:117::-;18868:1;18865;18858:12;18882:180;18930:77;18927:1;18920:88;19027:4;19024:1;19017:15;19051:4;19048:1;19041:15;19068:281;19151:27;19173:4;19151:27;:::i;:::-;19143:6;19139:40;19281:6;19269:10;19266:22;19245:18;19233:10;19230:34;19227:62;19224:88;;;19292:18;;:::i;:::-;19224:88;19332:10;19328:2;19321:22;19111:238;19068:281;;:::o;19355:129::-;19389:6;19416:20;;:::i;:::-;19406:30;;19445:33;19473:4;19465:6;19445:33;:::i;:::-;19355:129;;;:::o;19490:308::-;19552:4;19642:18;19634:6;19631:30;19628:56;;;19664:18;;:::i;:::-;19628:56;19702:29;19724:6;19702:29;:::i;:::-;19694:37;;19786:4;19780;19776:15;19768:23;;19490:308;;;:::o;19804:421::-;19893:5;19918:66;19934:49;19976:6;19934:49;:::i;:::-;19918:66;:::i;:::-;19909:75;;20007:6;20000:5;19993:21;20045:4;20038:5;20034:16;20083:3;20074:6;20069:3;20065:16;20062:25;20059:112;;;20090:79;;:::i;:::-;20059:112;20180:39;20212:6;20207:3;20202;20180:39;:::i;:::-;19899:326;19804:421;;;;;:::o;20245:355::-;20312:5;20361:3;20354:4;20346:6;20342:17;20338:27;20328:122;;20369:79;;:::i;:::-;20328:122;20479:6;20473:13;20504:90;20590:3;20582:6;20575:4;20567:6;20563:17;20504:90;:::i;:::-;20495:99;;20318:282;20245:355;;;;:::o;20606:524::-;20686:6;20735:2;20723:9;20714:7;20710:23;20706:32;20703:119;;;20741:79;;:::i;:::-;20703:119;20882:1;20871:9;20867:17;20861:24;20912:18;20904:6;20901:30;20898:117;;;20934:79;;:::i;:::-;20898:117;21039:74;21105:7;21096:6;21085:9;21081:22;21039:74;:::i;:::-;21029:84;;20832:291;20606:524;;;;:::o;21136:225::-;21276:34;21272:1;21264:6;21260:14;21253:58;21345:8;21340:2;21332:6;21328:15;21321:33;21136:225;:::o;21367:366::-;21509:3;21530:67;21594:2;21589:3;21530:67;:::i;:::-;21523:74;;21606:93;21695:3;21606:93;:::i;:::-;21724:2;21719:3;21715:12;21708:19;;21367:366;;;:::o;21739:419::-;21905:4;21943:2;21932:9;21928:18;21920:26;;21992:9;21986:4;21982:20;21978:1;21967:9;21963:17;21956:47;22020:131;22146:4;22020:131;:::i;:::-;22012:139;;21739:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./MutualToken.sol\";\nimport \"./MutualEscrowToken.sol\";\nimport \"./UserActivityProposal.sol\";\n\ncontract MutualTokenFactory is Ownable {\n\n    struct ProposalConfig {\n        uint8 acceptedCountLimit;\n        uint8 rejectedCountLimit;\n    }\n\n    struct UserState {\n        address user;\n        string info;\n        bool joined;\n    }\n\n    struct UserProposal {\n        address user;\n        UserActivityProposal proposal;\n        bool exists;\n    }\n\n     MutualToken mutualToken;\n     MutualEscrowToken escrowToken;\n\n     mapping(address => UserState) public userStates;\n\n     mapping(address => UserProposal) public userJoinedProposal;\n\n     ProposalConfig config;\n\n    constructor() Ownable() {\n        mutualToken = new MutualToken();\n        escrowToken = new MutualEscrowToken();\n        config.acceptedCountLimit = 0;\n        config.rejectedCountLimit = 1;\n    }\n\n    event ProposalReCreated(address to);\n\n    event ProposalCreated(address to);\n\n    event ProposalDone(address to);\n\n    event ProposalReject(address to);\n\n    function join(uint256 amount, string calldata description) public returns(address _proposalAddress) {\n        require(owner() != msg.sender, \"manager can not join\");\n        require(!userStates[msg.sender].joined, \"account had been joined.\");\n\n        if(userJoinedProposal[msg.sender].exists) {\n            emit ProposalReCreated(address(userJoinedProposal[msg.sender].proposal));\n            return address(userJoinedProposal[msg.sender].proposal);\n        }\n\n        UserActivityProposal proposal = new UserActivityProposal(msg.sender, description, amount,  owner(), config.acceptedCountLimit, config.rejectedCountLimit);\n        userJoinedProposal[msg.sender].proposal = proposal;\n        userJoinedProposal[msg.sender].exists = true;\n\n        emit ProposalCreated(address(proposal));\n        return address(userJoinedProposal[msg.sender].proposal);\n    } \n\n    function accept(address to) public {\n       require(msg.sender == owner() || userStates[msg.sender].joined, \"user must owner or user had been joined.\");\n       require(msg.sender != to, \"user can only vote for other users\");\n       require(userJoinedProposal[to].exists, \"proposal exists\");\n\n       UserActivityProposal proposal = userJoinedProposal[to].proposal;\n       UserActivityProposal.Stage stage = proposal.vote(msg.sender, true);\n       if(stage == UserActivityProposal.Stage.Done) {\n           uint256 tokenAmount = proposal.getAmount() / 2;\n           uint256 escrowTokenAmount = proposal.getAmount() - tokenAmount;\n\n           mutualToken.mint(to, tokenAmount);\n           escrowToken.mint(to, escrowTokenAmount);\n\n           userStates[to].user = proposal.getUser();\n           userStates[to].info = proposal.getInfo();\n           userStates[to].joined = true;\n\n           emit ProposalDone(to);\n       }\n    }\n\n    function reject(address to) public returns(UserActivityProposal.Stage stage) {\n       require(msg.sender == owner() || userStates[msg.sender].joined, \"user must owner or user had been joined.\");\n       require(msg.sender != to, \"user can only vote for other users\");\n       require(userJoinedProposal[to].exists, \"proposal exists\");\n       UserActivityProposal proposal = userJoinedProposal[to].proposal;\n       stage = proposal.vote(msg.sender, false);\n       if(stage == UserActivityProposal.Stage.Reject) {\n           userJoinedProposal[to].exists = false;\n           emit ProposalReject(to);\n       }\n    }\n\n    function getTokenAddress() public view returns (address _address) {\n        return address(mutualToken);\n    }\n\n    function getEscrowTokenAddress() public view returns (address _address) {\n        return address(escrowToken);\n    }\n\n}",
  "sourcePath": "/Users/jonah/SolidityProject/otest/contracts/MutualTokenFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/MutualTokenFactory.sol",
    "exportedSymbols": {
      "Context": [
        815
      ],
      "ERC20": [
        690
      ],
      "IERC20": [
        768
      ],
      "IERC20Metadata": [
        793
      ],
      "MutualEscrowToken": [
        849
      ],
      "MutualToken": [
        883
      ],
      "MutualTokenFactory": [
        1305
      ],
      "Ownable": [
        104
      ],
      "UserActivityProposal": [
        1562
      ]
    },
    "id": 1306,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 885,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 886,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1306,
        "sourceUnit": 105,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MutualToken.sol",
        "file": "./MutualToken.sol",
        "id": 887,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1306,
        "sourceUnit": 884,
        "src": "110:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MutualEscrowToken.sol",
        "file": "./MutualEscrowToken.sol",
        "id": 888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1306,
        "sourceUnit": 850,
        "src": "138:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/UserActivityProposal.sol",
        "file": "./UserActivityProposal.sol",
        "id": 889,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1306,
        "sourceUnit": 1563,
        "src": "172:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 890,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "241:7:7"
            },
            "id": 891,
            "nodeType": "InheritanceSpecifier",
            "src": "241:7:7"
          }
        ],
        "canonicalName": "MutualTokenFactory",
        "contractDependencies": [
          849,
          883,
          1562
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1305,
        "linearizedBaseContracts": [
          1305,
          104,
          815
        ],
        "name": "MutualTokenFactory",
        "nameLocation": "219:18:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "MutualTokenFactory.ProposalConfig",
            "id": 896,
            "members": [
              {
                "constant": false,
                "id": 893,
                "mutability": "mutable",
                "name": "acceptedCountLimit",
                "nameLocation": "294:18:7",
                "nodeType": "VariableDeclaration",
                "scope": 896,
                "src": "288:24:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 892,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "288:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 895,
                "mutability": "mutable",
                "name": "rejectedCountLimit",
                "nameLocation": "328:18:7",
                "nodeType": "VariableDeclaration",
                "scope": 896,
                "src": "322:24:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 894,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "322:5:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProposalConfig",
            "nameLocation": "263:14:7",
            "nodeType": "StructDefinition",
            "scope": 1305,
            "src": "256:97:7",
            "visibility": "public"
          },
          {
            "canonicalName": "MutualTokenFactory.UserState",
            "id": 903,
            "members": [
              {
                "constant": false,
                "id": 898,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "394:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "386:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 897,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "386:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 900,
                "mutability": "mutable",
                "name": "info",
                "nameLocation": "415:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "408:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 899,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "408:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 902,
                "mutability": "mutable",
                "name": "joined",
                "nameLocation": "434:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "429:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 901,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserState",
            "nameLocation": "366:9:7",
            "nodeType": "StructDefinition",
            "scope": 1305,
            "src": "359:88:7",
            "visibility": "public"
          },
          {
            "canonicalName": "MutualTokenFactory.UserProposal",
            "id": 911,
            "members": [
              {
                "constant": false,
                "id": 905,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "491:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 911,
                "src": "483:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 904,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "483:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 908,
                "mutability": "mutable",
                "name": "proposal",
                "nameLocation": "526:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 911,
                "src": "505:29:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                  "typeString": "contract UserActivityProposal"
                },
                "typeName": {
                  "id": 907,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 906,
                    "name": "UserActivityProposal",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1562,
                    "src": "505:20:7"
                  },
                  "referencedDeclaration": 1562,
                  "src": "505:20:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                    "typeString": "contract UserActivityProposal"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 910,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "549:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 911,
                "src": "544:11:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 909,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "544:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserProposal",
            "nameLocation": "460:12:7",
            "nodeType": "StructDefinition",
            "scope": 1305,
            "src": "453:109:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 914,
            "mutability": "mutable",
            "name": "mutualToken",
            "nameLocation": "581:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1305,
            "src": "569:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MutualToken_$883",
              "typeString": "contract MutualToken"
            },
            "typeName": {
              "id": 913,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 912,
                "name": "MutualToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 883,
                "src": "569:11:7"
              },
              "referencedDeclaration": 883,
              "src": "569:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MutualToken_$883",
                "typeString": "contract MutualToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 917,
            "mutability": "mutable",
            "name": "escrowToken",
            "nameLocation": "617:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1305,
            "src": "599:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
              "typeString": "contract MutualEscrowToken"
            },
            "typeName": {
              "id": 916,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 915,
                "name": "MutualEscrowToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 849,
                "src": "599:17:7"
              },
              "referencedDeclaration": 849,
              "src": "599:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                "typeString": "contract MutualEscrowToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0ecc535f",
            "id": 922,
            "mutability": "mutable",
            "name": "userStates",
            "nameLocation": "673:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1305,
            "src": "636:47:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
              "typeString": "mapping(address => struct MutualTokenFactory.UserState)"
            },
            "typeName": {
              "id": 921,
              "keyType": {
                "id": 918,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "644:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "636:29:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
                "typeString": "mapping(address => struct MutualTokenFactory.UserState)"
              },
              "valueType": {
                "id": 920,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 919,
                  "name": "UserState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 903,
                  "src": "655:9:7"
                },
                "referencedDeclaration": 903,
                "src": "655:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserState_$903_storage_ptr",
                  "typeString": "struct MutualTokenFactory.UserState"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0734a58b",
            "id": 927,
            "mutability": "mutable",
            "name": "userJoinedProposal",
            "nameLocation": "731:18:7",
            "nodeType": "VariableDeclaration",
            "scope": 1305,
            "src": "691:58:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
              "typeString": "mapping(address => struct MutualTokenFactory.UserProposal)"
            },
            "typeName": {
              "id": 926,
              "keyType": {
                "id": 923,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "699:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "691:32:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                "typeString": "mapping(address => struct MutualTokenFactory.UserProposal)"
              },
              "valueType": {
                "id": 925,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 924,
                  "name": "UserProposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 911,
                  "src": "710:12:7"
                },
                "referencedDeclaration": 911,
                "src": "710:12:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserProposal_$911_storage_ptr",
                  "typeString": "struct MutualTokenFactory.UserProposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 930,
            "mutability": "mutable",
            "name": "config",
            "nameLocation": "772:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1305,
            "src": "757:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ProposalConfig_$896_storage",
              "typeString": "struct MutualTokenFactory.ProposalConfig"
            },
            "typeName": {
              "id": 929,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 928,
                "name": "ProposalConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 896,
                "src": "757:14:7"
              },
              "referencedDeclaration": 896,
              "src": "757:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ProposalConfig_$896_storage_ptr",
                "typeString": "struct MutualTokenFactory.ProposalConfig"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "809:173:7",
              "statements": [
                {
                  "expression": {
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 935,
                      "name": "mutualToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "819:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MutualToken_$883",
                        "typeString": "contract MutualToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "833:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MutualToken_$883_$",
                          "typeString": "function () returns (contract MutualToken)"
                        },
                        "typeName": {
                          "id": 937,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 936,
                            "name": "MutualToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 883,
                            "src": "837:11:7"
                          },
                          "referencedDeclaration": 883,
                          "src": "837:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MutualToken_$883",
                            "typeString": "contract MutualToken"
                          }
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "833:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MutualToken_$883",
                        "typeString": "contract MutualToken"
                      }
                    },
                    "src": "819:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MutualToken_$883",
                      "typeString": "contract MutualToken"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "819:31:7"
                },
                {
                  "expression": {
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 942,
                      "name": "escrowToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "860:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                        "typeString": "contract MutualEscrowToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "874:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MutualEscrowToken_$849_$",
                          "typeString": "function () returns (contract MutualEscrowToken)"
                        },
                        "typeName": {
                          "id": 944,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 943,
                            "name": "MutualEscrowToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 849,
                            "src": "878:17:7"
                          },
                          "referencedDeclaration": 849,
                          "src": "878:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                            "typeString": "contract MutualEscrowToken"
                          }
                        }
                      },
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "874:23:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                        "typeString": "contract MutualEscrowToken"
                      }
                    },
                    "src": "860:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                      "typeString": "contract MutualEscrowToken"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "860:37:7"
                },
                {
                  "expression": {
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 949,
                        "name": "config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "907:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalConfig_$896_storage",
                          "typeString": "struct MutualTokenFactory.ProposalConfig storage ref"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "acceptedCountLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 893,
                      "src": "907:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "935:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "907:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "907:29:7"
                },
                {
                  "expression": {
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 955,
                        "name": "config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "946:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalConfig_$896_storage",
                          "typeString": "struct MutualTokenFactory.ProposalConfig storage ref"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rejectedCountLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 895,
                      "src": "946:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "974:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "946:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "946:29:7"
                }
              ]
            },
            "id": 962,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 933,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 932,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "799:7:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "799:9:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:2:7"
            },
            "returnParameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:7"
            },
            "scope": 1305,
            "src": "785:197:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "299f6b431d20505d54957d6f502e50c91eee5148992dd9510f4bd75e8dd384f8",
            "id": 966,
            "name": "ProposalReCreated",
            "nameLocation": "994:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1020:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "1012:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:12:7"
            },
            "src": "988:36:7"
          },
          {
            "anonymous": false,
            "eventSelector": "488fccde177d9377f35d8d9a4f0b3462fcc7cdb926a00d3d99630ef1d672a2cd",
            "id": 970,
            "name": "ProposalCreated",
            "nameLocation": "1036:15:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 968,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1060:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 970,
                  "src": "1052:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1051:12:7"
            },
            "src": "1030:34:7"
          },
          {
            "anonymous": false,
            "eventSelector": "9ef19eae0bc3c3697a33bfce884cc412cef714b4f78e716dfafad37a8dd79a11",
            "id": 974,
            "name": "ProposalDone",
            "nameLocation": "1076:12:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1097:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 974,
                  "src": "1089:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1088:12:7"
            },
            "src": "1070:31:7"
          },
          {
            "anonymous": false,
            "eventSelector": "cf051bc95b4ea55c0479a7233f52bbb7949eddaed918754bf20e0a066eb68dd0",
            "id": 978,
            "name": "ProposalReject",
            "nameLocation": "1113:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 976,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1136:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "1128:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1127:12:7"
            },
            "src": "1107:33:7"
          },
          {
            "body": {
              "id": 1083,
              "nodeType": "Block",
              "src": "1246:759:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 988,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1264:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1264:7:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 990,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1275:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1275:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1264:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d616e616765722063616e206e6f74206a6f696e",
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71",
                          "typeString": "literal_string \"manager can not join\""
                        },
                        "value": "manager can not join"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8985b4256028e0b1b04a7c88d057faadb31a21e56352addd20075af0cd2de71",
                          "typeString": "literal_string \"manager can not join\""
                        }
                      ],
                      "id": 987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1256:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1256:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:54:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1328:30:7",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 997,
                              "name": "userStates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "1329:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
                                "typeString": "mapping(address => struct MutualTokenFactory.UserState storage ref)"
                              }
                            },
                            "id": 1000,
                            "indexExpression": {
                              "expression": {
                                "id": 998,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1340:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1340:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1329:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserState_$903_storage",
                              "typeString": "struct MutualTokenFactory.UserState storage ref"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "joined",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 902,
                          "src": "1329:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6163636f756e7420686164206265656e206a6f696e65642e",
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1360:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a",
                          "typeString": "literal_string \"account had been joined.\""
                        },
                        "value": "account had been joined."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64046508657801867b57c1e3fa8ab562902f0d2c1573f37706ca27b68afd805a",
                          "typeString": "literal_string \"account had been joined.\""
                        }
                      ],
                      "id": 996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1320:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "1320:67:7"
                },
                {
                  "condition": {
                    "expression": {
                      "baseExpression": {
                        "id": 1006,
                        "name": "userJoinedProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "1401:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                          "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                        }
                      },
                      "id": 1009,
                      "indexExpression": {
                        "expression": {
                          "id": 1007,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1420:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1420:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1401:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                        "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 910,
                    "src": "1401:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1032,
                  "nodeType": "IfStatement",
                  "src": "1398:208:7",
                  "trueBody": {
                    "id": 1031,
                    "nodeType": "Block",
                    "src": "1440:166:7",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1014,
                                      "name": "userJoinedProposal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 927,
                                      "src": "1485:18:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                                        "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                                      }
                                    },
                                    "id": 1017,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1015,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "1504:3:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1016,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1504:10:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1485:30:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                                      "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                                    }
                                  },
                                  "id": 1018,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "proposal",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 908,
                                  "src": "1485:39:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                    "typeString": "contract UserActivityProposal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                    "typeString": "contract UserActivityProposal"
                                  }
                                ],
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1477:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1012,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1477:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1477:48:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1011,
                            "name": "ProposalReCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "1459:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1459:67:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1021,
                        "nodeType": "EmitStatement",
                        "src": "1454:72:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1024,
                                  "name": "userJoinedProposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 927,
                                  "src": "1555:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                                    "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                                  }
                                },
                                "id": 1027,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1025,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1574:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1574:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1555:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                                  "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                                }
                              },
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 908,
                              "src": "1555:39:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                "typeString": "contract UserActivityProposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                "typeString": "contract UserActivityProposal"
                              }
                            ],
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1547:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1022,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1547:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1547:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 986,
                        "id": 1030,
                        "nodeType": "Return",
                        "src": "1540:55:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1035,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "1637:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1083,
                      "src": "1616:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                        "typeString": "contract UserActivityProposal"
                      },
                      "typeName": {
                        "id": 1034,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1033,
                          "name": "UserActivityProposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1562,
                          "src": "1616:20:7"
                        },
                        "referencedDeclaration": 1562,
                        "src": "1616:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                          "typeString": "contract UserActivityProposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1050,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1039,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1673:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1673:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1041,
                        "name": "description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "1685:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1042,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "1698:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1043,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "1707:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:7:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1045,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1716:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalConfig_$896_storage",
                            "typeString": "struct MutualTokenFactory.ProposalConfig storage ref"
                          }
                        },
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "acceptedCountLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 893,
                        "src": "1716:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 1047,
                          "name": "config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "1743:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalConfig_$896_storage",
                            "typeString": "struct MutualTokenFactory.ProposalConfig storage ref"
                          }
                        },
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rejectedCountLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 895,
                        "src": "1743:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1648:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_uint8_$_t_uint8_$returns$_t_contract$_UserActivityProposal_$1562_$",
                        "typeString": "function (address,string memory,uint256,address,uint8,uint8) returns (contract UserActivityProposal)"
                      },
                      "typeName": {
                        "id": 1037,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1036,
                          "name": "UserActivityProposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1562,
                          "src": "1652:20:7"
                        },
                        "referencedDeclaration": 1562,
                        "src": "1652:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                          "typeString": "contract UserActivityProposal"
                        }
                      }
                    },
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:121:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                      "typeString": "contract UserActivityProposal"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1616:153:7"
                },
                {
                  "expression": {
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1051,
                          "name": "userJoinedProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 927,
                          "src": "1779:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                            "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                          }
                        },
                        "id": 1054,
                        "indexExpression": {
                          "expression": {
                            "id": 1052,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1798:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1798:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1779:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                          "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 908,
                      "src": "1779:39:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                        "typeString": "contract UserActivityProposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1056,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1035,
                      "src": "1821:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                        "typeString": "contract UserActivityProposal"
                      }
                    },
                    "src": "1779:50:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                      "typeString": "contract UserActivityProposal"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:50:7"
                },
                {
                  "expression": {
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1059,
                          "name": "userJoinedProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 927,
                          "src": "1839:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                            "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                          }
                        },
                        "id": 1062,
                        "indexExpression": {
                          "expression": {
                            "id": 1060,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1858:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1858:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1839:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                          "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "1839:37:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1879:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1839:44:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "1839:44:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1070,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "1923:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                              "typeString": "contract UserActivityProposal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                              "typeString": "contract UserActivityProposal"
                            }
                          ],
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1915:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1068,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1915:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1915:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1067,
                      "name": "ProposalCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "1899:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:34:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "EmitStatement",
                  "src": "1894:39:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1076,
                            "name": "userJoinedProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "1958:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                              "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                            }
                          },
                          "id": 1079,
                          "indexExpression": {
                            "expression": {
                              "id": 1077,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1977:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1977:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1958:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                            "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proposal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 908,
                        "src": "1958:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                          "typeString": "contract UserActivityProposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                          "typeString": "contract UserActivityProposal"
                        }
                      ],
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1950:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1074,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1950:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1950:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 986,
                  "id": 1082,
                  "nodeType": "Return",
                  "src": "1943:55:7"
                }
              ]
            },
            "functionSelector": "3cfb3d8a",
            "id": 1084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "1155:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 980,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1168:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "1160:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1160:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 982,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1192:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "1176:27:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 981,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1159:45:7"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "_proposalAddress",
                  "nameLocation": "1228:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "1220:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1219:26:7"
            },
            "scope": 1305,
            "src": "1146:859:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1206,
              "nodeType": "Block",
              "src": "2047:888:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1090,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2064:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2064:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1092,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2078:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2078:7:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2064:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1095,
                              "name": "userStates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "2089:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
                                "typeString": "mapping(address => struct MutualTokenFactory.UserState storage ref)"
                              }
                            },
                            "id": 1098,
                            "indexExpression": {
                              "expression": {
                                "id": 1096,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2100:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2100:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2089:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserState_$903_storage",
                              "typeString": "struct MutualTokenFactory.UserState storage ref"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "joined",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 902,
                          "src": "2089:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2064:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "75736572206d757374206f776e6572206f72207573657220686164206265656e206a6f696e65642e",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2120:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21",
                          "typeString": "literal_string \"user must owner or user had been joined.\""
                        },
                        "value": "user must owner or user had been joined."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21",
                          "typeString": "literal_string \"user must owner or user had been joined.\""
                        }
                      ],
                      "id": 1089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2056:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:107:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:107:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1105,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2180:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2180:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1107,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1086,
                          "src": "2194:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2180:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757365722063616e206f6e6c7920766f746520666f72206f74686572207573657273",
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2198:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16",
                          "typeString": "literal_string \"user can only vote for other users\""
                        },
                        "value": "user can only vote for other users"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16",
                          "typeString": "literal_string \"user can only vote for other users\""
                        }
                      ],
                      "id": 1104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2172:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1113,
                            "name": "userJoinedProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "2252:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                              "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                            }
                          },
                          "id": 1115,
                          "indexExpression": {
                            "id": 1114,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "2271:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2252:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                            "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                          }
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "2252:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20657869737473",
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2283:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd",
                          "typeString": "literal_string \"proposal exists\""
                        },
                        "value": "proposal exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd",
                          "typeString": "literal_string \"proposal exists\""
                        }
                      ],
                      "id": 1112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2244:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1119,
                  "nodeType": "ExpressionStatement",
                  "src": "2244:57:7"
                },
                {
                  "assignments": [
                    1122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "2332:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1206,
                      "src": "2311:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                        "typeString": "contract UserActivityProposal"
                      },
                      "typeName": {
                        "id": 1121,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1120,
                          "name": "UserActivityProposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1562,
                          "src": "2311:20:7"
                        },
                        "referencedDeclaration": 1562,
                        "src": "2311:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                          "typeString": "contract UserActivityProposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1127,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1123,
                        "name": "userJoinedProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "2343:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                          "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                        }
                      },
                      "id": 1125,
                      "indexExpression": {
                        "id": 1124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1086,
                        "src": "2362:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2343:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                        "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "proposal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 908,
                    "src": "2343:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                      "typeString": "contract UserActivityProposal"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2311:63:7"
                },
                {
                  "assignments": [
                    1132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1132,
                      "mutability": "mutable",
                      "name": "stage",
                      "nameLocation": "2410:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1206,
                      "src": "2383:32:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$1314",
                        "typeString": "enum UserActivityProposal.Stage"
                      },
                      "typeName": {
                        "id": 1131,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1130,
                          "name": "UserActivityProposal.Stage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1314,
                          "src": "2383:26:7"
                        },
                        "referencedDeclaration": 1314,
                        "src": "2383:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stage_$1314",
                          "typeString": "enum UserActivityProposal.Stage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1139,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1135,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2432:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2432:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2444:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1133,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "2418:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                          "typeString": "contract UserActivityProposal"
                        }
                      },
                      "id": 1134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1528,
                      "src": "2418:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_enum$_Stage_$1314_$",
                        "typeString": "function (address,bool) external returns (enum UserActivityProposal.Stage)"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2418:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$1314",
                      "typeString": "enum UserActivityProposal.Stage"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2383:66:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Stage_$1314",
                      "typeString": "enum UserActivityProposal.Stage"
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1140,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "2461:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$1314",
                        "typeString": "enum UserActivityProposal.Stage"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1141,
                          "name": "UserActivityProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1562,
                          "src": "2470:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UserActivityProposal_$1562_$",
                            "typeString": "type(contract UserActivityProposal)"
                          }
                        },
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Stage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1314,
                        "src": "2470:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Stage_$1314_$",
                          "typeString": "type(enum UserActivityProposal.Stage)"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Done",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1312,
                      "src": "2470:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$1314",
                        "typeString": "enum UserActivityProposal.Stage"
                      }
                    },
                    "src": "2461:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1205,
                  "nodeType": "IfStatement",
                  "src": "2458:471:7",
                  "trueBody": {
                    "id": 1204,
                    "nodeType": "Block",
                    "src": "2503:426:7",
                    "statements": [
                      {
                        "assignments": [
                          1146
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1146,
                            "mutability": "mutable",
                            "name": "tokenAmount",
                            "nameLocation": "2524:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1204,
                            "src": "2516:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1145,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2516:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1152,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1147,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1122,
                                "src": "2538:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                  "typeString": "contract UserActivityProposal"
                                }
                              },
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1545,
                              "src": "2538:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2538:20:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2561:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "2538:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2516:46:7"
                      },
                      {
                        "assignments": [
                          1154
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1154,
                            "mutability": "mutable",
                            "name": "escrowTokenAmount",
                            "nameLocation": "2583:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1204,
                            "src": "2575:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1153,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2575:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1160,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1155,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1122,
                                "src": "2603:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                  "typeString": "contract UserActivityProposal"
                                }
                              },
                              "id": 1156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1545,
                              "src": "2603:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2603:20:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1158,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1146,
                            "src": "2626:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2603:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2575:62:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1164,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "2668:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1165,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "2672:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1161,
                              "name": "mutualToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "2651:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MutualToken_$883",
                                "typeString": "contract MutualToken"
                              }
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 882,
                            "src": "2651:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2651:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1167,
                        "nodeType": "ExpressionStatement",
                        "src": "2651:33:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1171,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "2714:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1172,
                              "name": "escrowTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "2718:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1168,
                              "name": "escrowToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "2697:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                                "typeString": "contract MutualEscrowToken"
                              }
                            },
                            "id": 1170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 848,
                            "src": "2697:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2697:39:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1174,
                        "nodeType": "ExpressionStatement",
                        "src": "2697:39:7"
                      },
                      {
                        "expression": {
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1175,
                                "name": "userStates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 922,
                                "src": "2750:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
                                  "typeString": "mapping(address => struct MutualTokenFactory.UserState storage ref)"
                                }
                              },
                              "id": 1177,
                              "indexExpression": {
                                "id": 1176,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "2761:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2750:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserState_$903_storage",
                                "typeString": "struct MutualTokenFactory.UserState storage ref"
                              }
                            },
                            "id": 1178,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 898,
                            "src": "2750:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1179,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1122,
                                "src": "2772:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                  "typeString": "contract UserActivityProposal"
                                }
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getUser",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1553,
                              "src": "2772:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2772:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2750:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1183,
                        "nodeType": "ExpressionStatement",
                        "src": "2750:40:7"
                      },
                      {
                        "expression": {
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1184,
                                "name": "userStates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 922,
                                "src": "2803:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
                                  "typeString": "mapping(address => struct MutualTokenFactory.UserState storage ref)"
                                }
                              },
                              "id": 1186,
                              "indexExpression": {
                                "id": 1185,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "2814:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2803:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserState_$903_storage",
                                "typeString": "struct MutualTokenFactory.UserState storage ref"
                              }
                            },
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "info",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 900,
                            "src": "2803:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1188,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1122,
                                "src": "2825:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                                  "typeString": "contract UserActivityProposal"
                                }
                              },
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1561,
                              "src": "2825:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2825:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2803:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1192,
                        "nodeType": "ExpressionStatement",
                        "src": "2803:40:7"
                      },
                      {
                        "expression": {
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1193,
                                "name": "userStates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 922,
                                "src": "2856:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
                                  "typeString": "mapping(address => struct MutualTokenFactory.UserState storage ref)"
                                }
                              },
                              "id": 1195,
                              "indexExpression": {
                                "id": 1194,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "2867:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2856:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserState_$903_storage",
                                "typeString": "struct MutualTokenFactory.UserState storage ref"
                              }
                            },
                            "id": 1196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "joined",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 902,
                            "src": "2856:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2880:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2856:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1199,
                        "nodeType": "ExpressionStatement",
                        "src": "2856:28:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1201,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "2916:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1200,
                            "name": "ProposalDone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "2903:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2903:16:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1203,
                        "nodeType": "EmitStatement",
                        "src": "2898:21:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "9f005920",
            "id": 1207,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accept",
            "nameLocation": "2021:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2036:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1207,
                  "src": "2028:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:12:7"
            },
            "returnParameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2047:0:7"
            },
            "scope": 1305,
            "src": "2012:923:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1281,
              "nodeType": "Block",
              "src": "3018:533:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1216,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3035:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3035:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1218,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3049:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3049:7:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3035:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1221,
                              "name": "userStates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "3060:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserState_$903_storage_$",
                                "typeString": "mapping(address => struct MutualTokenFactory.UserState storage ref)"
                              }
                            },
                            "id": 1224,
                            "indexExpression": {
                              "expression": {
                                "id": 1222,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3071:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3071:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3060:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserState_$903_storage",
                              "typeString": "struct MutualTokenFactory.UserState storage ref"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "joined",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 902,
                          "src": "3060:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3035:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "75736572206d757374206f776e6572206f72207573657220686164206265656e206a6f696e65642e",
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21",
                          "typeString": "literal_string \"user must owner or user had been joined.\""
                        },
                        "value": "user must owner or user had been joined."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81dc27eb387650bb55aa2b0985e80ce490789c9ab516c38b5d28006dd07a7b21",
                          "typeString": "literal_string \"user must owner or user had been joined.\""
                        }
                      ],
                      "id": 1215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3027:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:107:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1229,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:107:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1231,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3151:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3151:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1233,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1209,
                          "src": "3165:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3151:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757365722063616e206f6e6c7920766f746520666f72206f74686572207573657273",
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3169:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16",
                          "typeString": "literal_string \"user can only vote for other users\""
                        },
                        "value": "user can only vote for other users"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_902df5cda8bff3c85c7eea611571086a774d0784d9f4695e8b3ab2933644bb16",
                          "typeString": "literal_string \"user can only vote for other users\""
                        }
                      ],
                      "id": 1230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3143:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3143:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "3143:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1239,
                            "name": "userJoinedProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "3223:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                              "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                            }
                          },
                          "id": 1241,
                          "indexExpression": {
                            "id": 1240,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1209,
                            "src": "3242:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3223:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                            "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "3223:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20657869737473",
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3254:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd",
                          "typeString": "literal_string \"proposal exists\""
                        },
                        "value": "proposal exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67053721eeb4a0bb9f0196dc98452a30001f627f98ce689a93f4b5748c9e68fd",
                          "typeString": "literal_string \"proposal exists\""
                        }
                      ],
                      "id": 1238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3215:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3215:57:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "3215:57:7"
                },
                {
                  "assignments": [
                    1248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1248,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "3302:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1281,
                      "src": "3281:29:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                        "typeString": "contract UserActivityProposal"
                      },
                      "typeName": {
                        "id": 1247,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1246,
                          "name": "UserActivityProposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1562,
                          "src": "3281:20:7"
                        },
                        "referencedDeclaration": 1562,
                        "src": "3281:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                          "typeString": "contract UserActivityProposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1253,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1249,
                        "name": "userJoinedProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "3313:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                          "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                        }
                      },
                      "id": 1251,
                      "indexExpression": {
                        "id": 1250,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1209,
                        "src": "3332:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3313:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                        "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "proposal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 908,
                    "src": "3313:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                      "typeString": "contract UserActivityProposal"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3281:63:7"
                },
                {
                  "expression": {
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1254,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "3353:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$1314",
                        "typeString": "enum UserActivityProposal.Stage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3375:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3375:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3387:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 1255,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1248,
                          "src": "3361:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UserActivityProposal_$1562",
                            "typeString": "contract UserActivityProposal"
                          }
                        },
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1528,
                        "src": "3361:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_enum$_Stage_$1314_$",
                          "typeString": "function (address,bool) external returns (enum UserActivityProposal.Stage)"
                        }
                      },
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3361:32:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$1314",
                        "typeString": "enum UserActivityProposal.Stage"
                      }
                    },
                    "src": "3353:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$1314",
                      "typeString": "enum UserActivityProposal.Stage"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:40:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Stage_$1314",
                      "typeString": "enum UserActivityProposal.Stage"
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1263,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "3405:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$1314",
                        "typeString": "enum UserActivityProposal.Stage"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 1264,
                          "name": "UserActivityProposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1562,
                          "src": "3414:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UserActivityProposal_$1562_$",
                            "typeString": "type(contract UserActivityProposal)"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Stage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1314,
                        "src": "3414:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Stage_$1314_$",
                          "typeString": "type(enum UserActivityProposal.Stage)"
                        }
                      },
                      "id": 1266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Reject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1313,
                      "src": "3414:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stage_$1314",
                        "typeString": "enum UserActivityProposal.Stage"
                      }
                    },
                    "src": "3405:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1280,
                  "nodeType": "IfStatement",
                  "src": "3402:143:7",
                  "trueBody": {
                    "id": 1279,
                    "nodeType": "Block",
                    "src": "3449:96:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1268,
                                "name": "userJoinedProposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 927,
                                "src": "3462:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProposal_$911_storage_$",
                                  "typeString": "mapping(address => struct MutualTokenFactory.UserProposal storage ref)"
                                }
                              },
                              "id": 1270,
                              "indexExpression": {
                                "id": 1269,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "3481:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3462:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserProposal_$911_storage",
                                "typeString": "struct MutualTokenFactory.UserProposal storage ref"
                              }
                            },
                            "id": 1271,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "exists",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 910,
                            "src": "3462:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3494:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3462:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1274,
                        "nodeType": "ExpressionStatement",
                        "src": "3462:37:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1276,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1209,
                              "src": "3532:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1275,
                            "name": "ProposalReject",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "3517:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3517:18:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1278,
                        "nodeType": "EmitStatement",
                        "src": "3512:23:7"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ab0da5a9",
            "id": 1282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reject",
            "nameLocation": "2950:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2965:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1282,
                  "src": "2957:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2956:12:7"
            },
            "returnParameters": {
              "id": 1214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1213,
                  "mutability": "mutable",
                  "name": "stage",
                  "nameLocation": "3011:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1282,
                  "src": "2984:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stage_$1314",
                    "typeString": "enum UserActivityProposal.Stage"
                  },
                  "typeName": {
                    "id": 1212,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1211,
                      "name": "UserActivityProposal.Stage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1314,
                      "src": "2984:26:7"
                    },
                    "referencedDeclaration": 1314,
                    "src": "2984:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stage_$1314",
                      "typeString": "enum UserActivityProposal.Stage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2983:34:7"
            },
            "scope": 1305,
            "src": "2941:610:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "3623:44:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1289,
                        "name": "mutualToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "3648:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MutualToken_$883",
                          "typeString": "contract MutualToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MutualToken_$883",
                          "typeString": "contract MutualToken"
                        }
                      ],
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3640:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1287,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3640:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1286,
                  "id": 1291,
                  "nodeType": "Return",
                  "src": "3633:27:7"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "3566:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3581:2:7"
            },
            "returnParameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3613:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "3605:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3604:18:7"
            },
            "scope": 1305,
            "src": "3557:110:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1303,
              "nodeType": "Block",
              "src": "3745:44:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1300,
                        "name": "escrowToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "3770:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                          "typeString": "contract MutualEscrowToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MutualEscrowToken_$849",
                          "typeString": "contract MutualEscrowToken"
                        }
                      ],
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3762:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3762:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3762:20:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1297,
                  "id": 1302,
                  "nodeType": "Return",
                  "src": "3755:27:7"
                }
              ]
            },
            "functionSelector": "8bea736e",
            "id": 1304,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEscrowTokenAddress",
            "nameLocation": "3682:21:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3703:2:7"
            },
            "returnParameters": {
              "id": 1297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1296,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3735:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1304,
                  "src": "3727:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3726:18:7"
            },
            "scope": 1305,
            "src": "3673:116:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1306,
        "src": "210:3582:7",
        "usedErrors": []
      }
    ],
    "src": "32:3760:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x488fccde177d9377f35d8d9a4f0b3462fcc7cdb926a00d3d99630ef1d672a2cd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ProposalCreated",
          "type": "event"
        },
        "0x9ef19eae0bc3c3697a33bfce884cc412cef714b4f78e716dfafad37a8dd79a11": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ProposalDone",
          "type": "event"
        },
        "0xcf051bc95b4ea55c0479a7233f52bbb7949eddaed918754bf20e0a066eb68dd0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ProposalReject",
          "type": "event"
        },
        "0x299f6b431d20505d54957d6f502e50c91eee5148992dd9510f4bd75e8dd384f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ProposalReCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5b1B37D3354817ae4EF06Fd2522e9B610B3e7577",
      "transactionHash": "0x9c08906a98d9a8bee674fdd6dd40c259beab8f69098a2db6618a676f8f0ff4d5"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-05T16:18:18.318Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}